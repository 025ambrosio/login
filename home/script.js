const _0x5f2180 = _0x48dc;
(function (_0x4dfd3f, _0x38a6e0) {
  const _0x69b8c2 = {
      _0x41dacd: 0x1d0,
      _0x474a40: 0x1d2,
      _0x2bcc55: 0x1be,
      _0x2a4129: 0x1bb,
      _0xb8838: 0x1e4,
      _0x21f70b: 0x1e1,
      _0x3caec4: 0x1e6,
      _0x59159a: 0x1df,
      _0x3cf8f1: 0x1c2,
      _0x1ef9d1: 0x1c5,
      _0x207dde: 0x1d3,
    },
    _0xa8849d = _0x48dc,
    _0x3882a7 = _0x4dfd3f();
  while (!![]) {
    try {
      const _0x2e7e27 =
        -parseInt(_0xa8849d(_0x69b8c2._0x41dacd)) / 0x1 +
        parseInt(_0xa8849d(_0x69b8c2._0x474a40)) / 0x2 +
        (parseInt(_0xa8849d(_0x69b8c2._0x2bcc55)) / 0x3) *
          (-parseInt(_0xa8849d(_0x69b8c2._0x2a4129)) / 0x4) +
        -parseInt(_0xa8849d(_0x69b8c2._0xb8838)) / 0x5 +
        (parseInt(_0xa8849d(_0x69b8c2._0x21f70b)) / 0x6) *
          (parseInt(_0xa8849d(_0x69b8c2._0x3caec4)) / 0x7) +
        (parseInt(_0xa8849d(_0x69b8c2._0x59159a)) / 0x8) *
          (parseInt(_0xa8849d(_0x69b8c2._0x3cf8f1)) / 0x9) +
        (parseInt(_0xa8849d(_0x69b8c2._0x1ef9d1)) / 0xa) *
          (parseInt(_0xa8849d(_0x69b8c2._0x207dde)) / 0xb);
      if (_0x2e7e27 === _0x38a6e0) break;
      else _0x3882a7["push"](_0x3882a7["shift"]());
    } catch (_0x16313b) {
      _0x3882a7["push"](_0x3882a7["shift"]());
    }
  }
})(_0x1a0e, 0x786b8);
const chatbotToggler = document["querySelector"](_0x5f2180(0x1d4)),
  closeBtn = document[_0x5f2180(0x1bc)](_0x5f2180(0x1c4)),
  chatbox = document["querySelector"](_0x5f2180(0x1e7)),
  chatInput = document[_0x5f2180(0x1bc)](_0x5f2180(0x1b2)),
  sendChatBtn = document[_0x5f2180(0x1bc)](".chat-input\x20span");
let userMessage = null;
function _0x1a0e() {
  const _0x47571f = [
    "reverse",
    "height",
    "fromCharCode",
    "2792212ragyxo",
    "querySelector",
    "toLowerCase",
    "3OpXiNS",
    "map",
    "remove",
    "choices",
    "277191wAwKjh",
    "Bearer\x20",
    ".close-btn",
    "1450cielrN",
    "system",
    "show-chatbot",
    "addEventListener",
    "toString",
    "value",
    "shiftKey",
    "scrollHeight",
    "join",
    "slice",
    "prototype",
    "727345VoTauG",
    "textContent",
    "788726jkzZkg",
    "67738LKqwKj",
    ".chatbot-toggler",
    "gpt-3.5-turbo",
    "application/json",
    "body",
    "user",
    "style",
    "Enter",
    "message",
    "preventDefault",
    "toggle",
    "innerWidth",
    "208gpJgws",
    "<p></p>",
    "66PjyhXg",
    "chat",
    "Ocorreu\x20um\x20erro!\x20Tente\x20novamente\x20mais\x20tarde.",
    "3870890uSRaZK",
    "split",
    "384853vpgMrR",
    ".chatbox",
    "click",
    "call",
    "stringify",
    "json",
    "classList",
    "Pensando...",
    ".chat-input\x20textarea",
    "charCodeAt",
    "shift",
    "<span\x20class=\x22material-symbols-outlined\x22></span><p></p>",
    "appendChild",
    "scrollTo",
  ];
  _0x1a0e = function () {
    return _0x47571f;
  };
  return _0x1a0e();
}
function _0x48dc(_0xfe5bf6, _0x217be8) {
  const _0x1a0ea9 = _0x1a0e();
  return (
    (_0x48dc = function (_0x48dcfd, _0xa738de) {
      _0x48dcfd = _0x48dcfd - 0x1b0;
      let _0x3f6eb0 = _0x1a0ea9[_0x48dcfd];
      return _0x3f6eb0;
    }),
    _0x48dc(_0xfe5bf6, _0x217be8)
  );
}
const inputInitHeight = chatInput[_0x5f2180(0x1cc)];
let conversationHistory = [];
const API_KEY =
    (function () {
      const _0x208925 = {
          _0x3701b9: 0x1ce,
          _0x782091: 0x1e9,
          _0x1a0be0: 0x1b4,
          _0x34f244: 0x1bf,
        },
        _0x3765d0 = { _0x377762: 0x1ba },
        _0x3ac68f = _0x5f2180;
      var _0x2c729c =
          Array["prototype"][_0x3ac68f(_0x208925._0x3701b9)][
            _0x3ac68f(_0x208925._0x782091)
          ](arguments),
        _0x4fe154 = _0x2c729c[_0x3ac68f(_0x208925._0x1a0be0)]();
      return _0x2c729c["reverse"]()
        [_0x3ac68f(_0x208925._0x34f244)](function (_0x2f4217, _0x571320) {
          const _0x2303e2 = _0x3ac68f;
          return String[_0x2303e2(_0x3765d0._0x377762)](
            _0x2f4217 - _0x4fe154 - 0x9 - _0x571320,
          );
        })
        ["join"]("");
    })(
      0x3a,
      0x8a,
      0xb4,
      0x85,
      0xa8,
      0xa7,
      0x9e,
      0xb2,
      0x8e,
      0xa5,
      0x77,
      0xb3,
      0xb7,
      0xb9,
      0xb6,
      0x72,
      0xaf,
      0xb6,
    ) +
    (0xcd)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x198)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      ["split"]("")
      ["map"](function (_0x32ee74) {
        const _0x17251e = { _0x11196e: 0x1ba, _0x175d81: 0x1b3 },
          _0x16a5a4 = _0x5f2180;
        return String[_0x16a5a4(_0x17251e._0x11196e)](
          _0x32ee74[_0x16a5a4(_0x17251e._0x175d81)]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0xa)["toString"](0x24)[_0x5f2180(0x1bd)]() +
    (0x1bb)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x4cee51) {
        const _0x5bfead = { _0x6682a3: 0x1ba },
          _0x53a081 = _0x5f2180;
        return String[_0x53a081(_0x5bfead._0x6682a3)](
          _0x4cee51["charCodeAt"]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x22)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x14)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      ["split"]("")
      [_0x5f2180(0x1bf)](function (_0x13904b) {
        const _0x1aaf4a = { _0x1c582a: 0x1ba, _0xa7f8d5: 0x1b3 },
          _0x4a4702 = _0x5f2180;
        return String[_0x4a4702(_0x1aaf4a._0x1c582a)](
          _0x13904b[_0x4a4702(_0x1aaf4a._0xa7f8d5)]() + -0x27,
        );
      })
      ["join"]("") +
    (0x360)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
    (0x1d)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      ["map"](function (_0x127a57) {
        const _0x238068 = { _0x272169: 0x1b3 },
          _0xd8fe07 = _0x5f2180;
        return String["fromCharCode"](
          _0x127a57[_0xd8fe07(_0x238068._0x272169)]() + -0x47,
        );
      })
      ["join"]("") +
    (0x12)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x1d)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x4465eb) {
        const _0x39e5f2 = { _0x2ccd3c: 0x1ba, _0x38da29: 0x1b3 },
          _0x396883 = _0x5f2180;
        return String[_0x396883(_0x39e5f2._0x2ccd3c)](
          _0x4465eb[_0x396883(_0x39e5f2._0x38da29)]() + -0x47,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x15)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x1bf9fa) {
        const _0x3b7100 = { _0x42bfbe: 0x1ba, _0x12f589: 0x1b3 },
          _0x33cb7b = _0x5f2180;
        return String[_0x33cb7b(_0x3b7100._0x42bfbe)](
          _0x1bf9fa[_0x33cb7b(_0x3b7100._0x12f589)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x1b)["toString"](0x24)[_0x5f2180(0x1bd)]() +
    (0x1f)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x278558) {
        const _0x358337 = { _0x518098: 0x1ba, _0x3a0498: 0x1b3 },
          _0x38e5f3 = _0x5f2180;
        return String[_0x38e5f3(_0x358337._0x518098)](
          _0x278558[_0x38e5f3(_0x358337._0x3a0498)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x3c)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x21)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      ["split"]("")
      [_0x5f2180(0x1bf)](function (_0x399c67) {
        const _0x363d1a = { _0x4906a7: 0x1ba, _0x2638ea: 0x1b3 },
          _0x2d4edb = _0x5f2180;
        return String[_0x2d4edb(_0x363d1a._0x4906a7)](
          _0x399c67[_0x2d4edb(_0x363d1a._0x2638ea)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x4a3)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x4b5)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      ["split"]("")
      [_0x5f2180(0x1bf)](function (_0x29981f) {
        const _0x23ba3f = { _0x9536ea: 0x1ba, _0x45dee9: 0x1b3 },
          _0x52d83f = _0x5f2180;
        return String[_0x52d83f(_0x23ba3f._0x9536ea)](
          _0x29981f[_0x52d83f(_0x23ba3f._0x45dee9)]() + -0x27,
        );
      })
      ["join"]("") +
    (0x54c360)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
    (0x18)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      ["split"]("")
      ["map"](function (_0x48e33d) {
        const _0x294e86 = { _0x2211ea: 0x1ba, _0x191305: 0x1b3 },
          _0x4cce38 = _0x5f2180;
        return String[_0x4cce38(_0x294e86._0x2211ea)](
          _0x48e33d[_0x4cce38(_0x294e86._0x191305)]() + -0x27,
        );
      })
      ["join"]("") +
    (0x2cb9)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0xf)
      ["toString"](0x24)
      ["toLowerCase"]()
      [_0x5f2180(0x1e5)]("")
      ["map"](function (_0x2d7856) {
        const _0x430b1d = { _0x5d8c2e: 0x1ba },
          _0x56af14 = _0x5f2180;
        return String[_0x56af14(_0x430b1d._0x5d8c2e)](
          _0x2d7856["charCodeAt"]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x12)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x21)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      ["map"](function (_0x32350f) {
        const _0x2dcb6a = { _0x581ce1: 0x1ba, _0x2ea9a6: 0x1b3 },
          _0xa8f124 = _0x5f2180;
        return String[_0xa8f124(_0x2dcb6a._0x581ce1)](
          _0x32350f[_0xa8f124(_0x2dcb6a._0x2ea9a6)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x1f4)["toString"](0x24)[_0x5f2180(0x1bd)]() +
    (0xc)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x510051) {
        const _0x5381e1 = { _0x15568c: 0x1ba },
          _0x48f679 = _0x5f2180;
        return String[_0x48f679(_0x5381e1._0x15568c)](
          _0x510051["charCodeAt"]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x401)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
    (0x413)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x4fad79) {
        const _0x494662 = { _0x4dd138: 0x1ba, _0x29686d: 0x1b3 },
          _0x2d38fe = _0x5f2180;
        return String[_0x2d38fe(_0x494662._0x4dd138)](
          _0x4fad79[_0x2d38fe(_0x494662._0x29686d)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x103b66f08f7)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x458)
      ["toString"](0x24)
      ["toLowerCase"]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x5d883f) {
        const _0x2ca47e = { _0x549bac: 0x1ba, _0x3e77d2: 0x1b3 },
          _0x5f3394 = _0x5f2180;
        return String[_0x5f3394(_0x2ca47e._0x549bac)](
          _0x5d883f[_0x5f3394(_0x2ca47e._0x3e77d2)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x2)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x12feeb)
      ["toString"](0x24)
      [_0x5f2180(0x1bd)]()
      ["split"]("")
      [_0x5f2180(0x1bf)](function (_0xa99ae) {
        const _0x3c71eb = { _0x5ed686: 0x1ba, _0x3cb141: 0x1b3 },
          _0x25925a = _0x5f2180;
        return String[_0x25925a(_0x3c71eb._0x5ed686)](
          _0xa99ae[_0x25925a(_0x3c71eb._0x3cb141)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x166b6a15)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x13)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      [_0x5f2180(0x1e5)]("")
      ["map"](function (_0x290656) {
        const _0x28fb9f = { _0x315aea: 0x1ba, _0x4b9c67: 0x1b3 },
          _0x33f4a1 = _0x5f2180;
        return String[_0x33f4a1(_0x28fb9f._0x315aea)](
          _0x290656[_0x33f4a1(_0x28fb9f._0x4b9c67)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0xa)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      ["split"]("")
      [_0x5f2180(0x1bf)](function (_0x10b66f) {
        const _0x99182a = { _0x1823a7: 0x1b3 },
          _0x592c42 = _0x5f2180;
        return String["fromCharCode"](
          _0x10b66f[_0x592c42(_0x99182a._0x1823a7)]() + -0xd,
        );
      })
      ["join"]("") +
    (0x3)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0x12)
      ["toString"](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x3e8db5) {
        const _0x4a7fa6 = { _0x468068: 0x1ba, _0x577f87: 0x1b3 },
          _0x3e5b01 = _0x5f2180;
        return String[_0x3e5b01(_0x4a7fa6._0x468068)](
          _0x3e8db5[_0x3e5b01(_0x4a7fa6._0x577f87)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x15)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (function () {
      const _0x48ce4a = { _0x47a3cd: 0x1cf, _0x51b2c8: 0x1e9, _0x930a3: 0x1b8 },
        _0x407d31 = _0x5f2180;
      var _0xe1cdab =
          Array[_0x407d31(_0x48ce4a._0x47a3cd)]["slice"][
            _0x407d31(_0x48ce4a._0x51b2c8)
          ](arguments),
        _0x44b66d = _0xe1cdab["shift"]();
      return _0xe1cdab[_0x407d31(_0x48ce4a._0x930a3)]()
        ["map"](function (_0x4ff36e, _0x574e88) {
          return String["fromCharCode"](
            _0x4ff36e - _0x44b66d - 0x4 - _0x574e88,
          );
        })
        ["join"]("");
    })(
      0x3a,
      0xe1,
      0xbb,
      0xa7,
      0xe5,
      0xb4,
      0xe8,
      0xba,
      0xe2,
      0xbb,
      0xdb,
      0xad,
      0xc0,
      0xba,
      0xd6,
      0x97,
      0xd5,
      0xb1,
      0xb4,
      0xc4,
      0xa9,
      0xb2,
      0xda,
      0xc9,
      0xab,
      0xa7,
      0xc4,
      0x92,
      0xbe,
      0x9a,
      0xb0,
      0xca,
      0xc5,
      0xac,
      0xc6,
      0xb8,
      0xb3,
      0xbd,
      0x9f,
      0xb8,
      0x9f,
      0x98,
      0x92,
      0xb8,
      0xbf,
      0x95,
      0xae,
      0x8d,
      0x95,
      0x89,
      0x75,
      0x96,
      0x75,
      0x8b,
      0x86,
      0xaa,
      0xa0,
    ) +
    (0xb)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0xeaf3f8) {
        const _0x5c7ff5 = { _0xe937b0: 0x1ba, _0x4c75d2: 0x1b3 },
          _0x5b5405 = _0x5f2180;
        return String[_0x5b5405(_0x5c7ff5._0xe937b0)](
          _0xeaf3f8[_0x5b5405(_0x5c7ff5._0x4c75d2)]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x13)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
    (0x15)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      ["split"]("")
      ["map"](function (_0x1d173f) {
        const _0x39ec3d = { _0x4e7d18: 0x1ba },
          _0x68c4f0 = _0x5f2180;
        return String[_0x68c4f0(_0x39ec3d._0x4e7d18)](
          _0x1d173f["charCodeAt"]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x4)["toString"](0x24)[_0x5f2180(0x1bd)]() +
    (0x14)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      ["split"]("")
      ["map"](function (_0x1dfd8b) {
        const _0xe6a14b = { _0x3bcb35: 0x1ba, _0x4c108d: 0x1b3 },
          _0x25b0e7 = _0x5f2180;
        return String[_0x25b0e7(_0xe6a14b._0x3bcb35)](
          _0x1dfd8b[_0x25b0e7(_0xe6a14b._0x4c108d)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x2f190b50)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (0xe)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x4145d5) {
        const _0x21c2ab = { _0x2ba73a: 0x1b3 },
          _0x21987f = _0x5f2180;
        return String["fromCharCode"](
          _0x4145d5[_0x21987f(_0x21c2ab._0x2ba73a)]() + -0xd,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x1d)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      ["split"]("")
      [_0x5f2180(0x1bf)](function (_0x4b0232) {
        const _0x239f13 = { _0x41b15f: 0x1ba, _0x266a4f: 0x1b3 },
          _0x70a209 = _0x5f2180;
        return String[_0x70a209(_0x239f13._0x41b15f)](
          _0x4b0232[_0x70a209(_0x239f13._0x266a4f)]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)]("") +
    (0x379d1)["toString"](0x24)[_0x5f2180(0x1bd)]() +
    (function () {
      const _0x4a5e05 = {
          _0x500aa2: 0x1cf,
          _0x1baacf: 0x1e9,
          _0x42f12f: 0x1b4,
          _0x5b9382: 0x1b8,
          _0xd77f90: 0x1bf,
          _0x4175d8: 0x1cd,
        },
        _0x28adf8 = _0x5f2180;
      var _0x338dfc =
          Array[_0x28adf8(_0x4a5e05._0x500aa2)]["slice"][
            _0x28adf8(_0x4a5e05._0x1baacf)
          ](arguments),
        _0x22a00c = _0x338dfc[_0x28adf8(_0x4a5e05._0x42f12f)]();
      return _0x338dfc[_0x28adf8(_0x4a5e05._0x5b9382)]()
        [_0x28adf8(_0x4a5e05._0xd77f90)](function (_0x1df01a, _0x35512f) {
          return String["fromCharCode"](
            _0x1df01a - _0x22a00c - 0x17 - _0x35512f,
          );
        })
        [_0x28adf8(_0x4a5e05._0x4175d8)]("");
    })(0x2a, 0x74, 0xb5, 0xae, 0xb4) +
    (0x11)
      [_0x5f2180(0x1c9)](0x24)
      ["toLowerCase"]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x4c2217) {
        const _0x197bbe = { _0x2b028a: 0x1ba },
          _0x4f900e = _0x5f2180;
        return String[_0x4f900e(_0x197bbe._0x2b028a)](
          _0x4c2217["charCodeAt"]() + -0x27,
        );
      })
      [_0x5f2180(0x1cd)](""),
  API_URL =
    (function () {
      const _0x1f36af = {
          _0x1d413c: 0x1cf,
          _0x2d3f68: 0x1ce,
          _0x584e6d: 0x1e9,
          _0x4dba0b: 0x1b4,
          _0x47f274: 0x1bf,
          _0x1ddd2f: 0x1cd,
        },
        _0x414b09 = _0x5f2180;
      var _0x50b52e =
          Array[_0x414b09(_0x1f36af._0x1d413c)][_0x414b09(_0x1f36af._0x2d3f68)][
            _0x414b09(_0x1f36af._0x584e6d)
          ](arguments),
        _0x26600b = _0x50b52e[_0x414b09(_0x1f36af._0x4dba0b)]();
      return _0x50b52e["reverse"]()
        [_0x414b09(_0x1f36af._0x47f274)](function (_0x2fe6be, _0x3d0b64) {
          return String["fromCharCode"](
            _0x2fe6be - _0x26600b - 0x20 - _0x3d0b64,
          );
        })
        [_0x414b09(_0x1f36af._0x1ddd2f)]("");
    })(0xe, 0x97, 0x64, 0x63, 0x6d, 0xa5, 0xa1, 0xa4, 0xa3, 0x96) +
    (0x396)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
    (0x1e)
      [_0x5f2180(0x1c9)](0x24)
      [_0x5f2180(0x1bd)]()
      [_0x5f2180(0x1e5)]("")
      [_0x5f2180(0x1bf)](function (_0x2d2b25) {
        const _0x530e09 = { _0x1fb877: 0x1ba },
          _0x570730 = _0x5f2180;
        return String[_0x570730(_0x530e09._0x1fb877)](
          _0x2d2b25["charCodeAt"]() + -0x47,
        );
      })
      ["join"]("") +
    (0x2792e66)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
    (function () {
      const _0x84f747 = {
          _0x325ba1: 0x1cf,
          _0x5d2a24: 0x1ce,
          _0x1c51a7: 0x1e9,
          _0x100f52: 0x1b4,
          _0x2bb3f8: 0x1bf,
        },
        _0x341051 = { _0x3d851c: 0x1ba },
        _0x4c3ded = _0x5f2180;
      var _0x214b76 =
          Array[_0x4c3ded(_0x84f747._0x325ba1)][_0x4c3ded(_0x84f747._0x5d2a24)][
            _0x4c3ded(_0x84f747._0x1c51a7)
          ](arguments),
        _0x1a73fa = _0x214b76[_0x4c3ded(_0x84f747._0x100f52)]();
      return _0x214b76["reverse"]()
        [_0x4c3ded(_0x84f747._0x2bb3f8)](function (_0x127f2c, _0x1b754f) {
          const _0x3afb8e = _0x4c3ded;
          return String[_0x3afb8e(_0x341051._0x3d851c)](
            _0x127f2c - _0x1a73fa - 0xc - _0x1b754f,
          );
        })
        ["join"]("");
    })(
      0x3,
      0x87,
      0x8d,
      0x90,
      0x8c,
      0x8d,
      0x80,
      0x4b,
      0x8f,
      0x7b,
      0x81,
      0x7b,
      0x46,
      0x47,
      0x8b,
      0x43,
      0x80,
      0x81,
      0x74,
      0x3e,
      0x78,
    ) +
    (0x9570)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
    (function () {
      const _0x30808c = {
          _0x23e455: 0x1cf,
          _0x5100bb: 0x1ce,
          _0x3c63f8: 0x1b8,
          _0x57100d: 0x1bf,
          _0x371060: 0x1cd,
        },
        _0x146b60 = { _0x51530b: 0x1ba },
        _0x174a54 = _0x5f2180;
      var _0x33e43d =
          Array[_0x174a54(_0x30808c._0x23e455)][_0x174a54(_0x30808c._0x5100bb)][
            "call"
          ](arguments),
        _0x42b1f3 = _0x33e43d["shift"]();
      return _0x33e43d[_0x174a54(_0x30808c._0x3c63f8)]()
        [_0x174a54(_0x30808c._0x57100d)](function (_0x2045df, _0x216219) {
          const _0x48a085 = _0x174a54;
          return String[_0x48a085(_0x146b60._0x51530b)](
            _0x2045df - _0x42b1f3 - 0x27 - _0x216219,
          );
        })
        [_0x174a54(_0x30808c._0x371060)]("");
    })(0x0, 0x95) +
    (0x1c)["toString"](0x24)[_0x5f2180(0x1bd)](),
  assistantInstructions = {
    role: _0x5f2180(0x1c6),
    content:
      (function () {
        const _0x115e71 = {
            _0x55835a: 0x1cf,
            _0x209c2f: 0x1ce,
            _0x506172: 0x1e9,
            _0x233df2: 0x1b8,
            _0x31e66e: 0x1cd,
          },
          _0x58fba8 = _0x5f2180;
        var _0x16a994 =
            Array[_0x58fba8(_0x115e71._0x55835a)][
              _0x58fba8(_0x115e71._0x209c2f)
            ][_0x58fba8(_0x115e71._0x506172)](arguments),
          _0x3e24c9 = _0x16a994["shift"]();
        return _0x16a994[_0x58fba8(_0x115e71._0x233df2)]()
          ["map"](function (_0x3c3184, _0x577734) {
            return String["fromCharCode"](
              _0x3c3184 - _0x3e24c9 - 0x3c - _0x577734,
            );
          })
          [_0x58fba8(_0x115e71._0x31e66e)]("");
      })(
        0x2e,
        0x448,
        0x43a,
        0x444,
        0x448,
        0x445,
        0x3f1,
        0x431,
        0x441,
        0x42f,
        0x43d,
        0x3ec,
        0x43e,
        0x439,
        0x431,
        0x436,
        0x430,
        0x433,
        0x426,
        0x427,
        0x3e3,
        0x434,
        0x422,
        0x432,
        0x42e,
        0x42a,
        0x42d,
        0x434,
        0x420,
        0x3da,
        0x41e,
        0x3d8,
        0x426,
        0x499,
        0x428,
        0x427,
        0x418,
        0x424,
        0x421,
        0x415,
        0x413,
        0x3ce,
        0x40e,
        0x3cc,
        0x41d,
        0x40f,
        0x40d,
        0x416,
        0x40c,
        0x40b,
        0x417,
        0x414,
        0x410,
        0x411,
        0x404,
        0x3c0,
        0x400,
        0x410,
        0x3fe,
        0x40c,
        0x3bb,
        0x3fb,
        0x402,
        0x40d,
        0x3fe,
        0x3b6,
        0x402,
        0x3e9,
        0x3b3,
        0x3cc,
        0x403,
        0x3f5,
        0x405,
        0x3f7,
        0x3e3,
        0x3ac,
        0x3ec,
        0x3aa,
        0x3f8,
        0x3ec,
        0x3f5,
        0x3e7,
        0x3f9,
        0x3f0,
        0x3f2,
        0x3d8,
        0x3a1,
        0x3ad,
        0x39f,
        0x3ed,
        0x460,
        0x3ef,
        0x3ee,
        0x3df,
        0x3eb,
        0x3e8,
        0x3dc,
        0x3ba,
        0x395,
        0xe04e,
        0xdbb0,
        0x37c,
        0x392,
        0x3e2,
        0x3d0,
        0x3d2,
        0x3e2,
        0x3d6,
        0x3cc,
        0x38a,
        0x3d6,
        0x3cd,
        0x3cb,
        0x3d5,
        0x3d5,
        0x384,
        0x3d6,
        0x3cd,
        0x3d0,
        0x3cf,
        0x3c1,
        0x38b,
        0x3c2,
        0x37c,
        0x3ce,
        0x3c9,
        0x3cc,
        0x3cb,
        0x3c6,
        0x3a4,
        0x375,
        0x393,
        0x3c6,
        0x3c1,
        0x3c5,
        0x3be,
        0x3b4,
        0x3bb,
        0x3ae,
        0x3ba,
        0x3ba,
        0x3b3,
        0x3ac,
        0x3a9,
        0x3b3,
        0x3ab,
        0x3b7,
        0x364,
        0x3b6,
        0x3b7,
        0x3a6,
        0x3b3,
        0x35f,
        0x3b0,
        0x39e,
        0x3ae,
        0x3aa,
        0x3a2,
        0x3a5,
        0x39d,
        0x3a4,
        0x356,
        0x3aa,
        0x3a3,
        0x39d,
        0x397,
        0x3a4,
        0x395,
        0x393,
        0x34e,
        0x3a2,
        0x39b,
        0x34b,
        0x353,
        0x38a,
        0x350,
        0x396,
        0x38a,
        0x38e,
        0x388,
        0x395,
        0x387,
        0x391,
        0x340,
        0x394,
        0x387,
        0x391,
        0x38a,
        0x380,
        0x38d,
        0x339,
        0x37d,
        0x38a,
        0x336,
        0x37a,
        0x389,
        0x384,
        0x332,
        0x37e,
        0x375,
        0x32f,
        0x381,
        0x37c,
        0x380,
        0x379,
        0x36f,
        0x376,
        0x377,
        0x374,
        0x326,
        0x36a,
        0x37a,
        0x368,
        0x376,
        0x321,
        0x3e1,
        0x369,
        0x31e,
        0x3e7,
        0x35f,
        0x36a,
        0x350,
        0x31b,
        0x318,
        0x331,
        0x357,
        0x363,
        0x335,
        0x2fd,
        0x32c,
        0x313,
        0x363,
        0x35a,
        0x35d,
        0x35c,
        0x34e,
        0x318,
        0x32f,
        0x30b,
        0x308,
        0x359,
        0x34b,
        0x34d,
        0x350,
        0x352,
        0x345,
        0x354,
        0x345,
        0x2ff,
        0x34d,
        0x346,
        0x34e,
        0x3bc,
        0x34f,
        0x34c,
        0x34d,
        0x2f7,
        0x345,
        0x2f5,
        0x339,
        0x326,
        0x2dc,
        0x2db,
        0x30a,
        0x342,
        0x339,
        0x33c,
        0x33b,
        0x32d,
        0x2f7,
        0x30e,
        0x2e8,
        0x328,
        0x338,
        0x326,
        0x334,
        0x2e3,
        0x331,
        0x335,
        0x32e,
        0x324,
        0x32b,
        0x31e,
        0x32a,
        0x32a,
        0x323,
        0x31c,
        0x31d,
        0x329,
        0x31f,
        0x2f9,
        0x2be,
        0x2d5,
        0x321,
        0x324,
        0x31f,
        0x321,
        0x31d,
        0x31a,
        0x2ed,
        0x2cb,
        0x311,
        0x317,
        0x311,
        0x31b,
        0x30b,
        0x310,
        0x316,
        0x304,
        0x2ef,
        0x2c1,
        0x305,
        0x2bf,
        0x30d,
        0x380,
        0x30f,
        0x30e,
        0x2ff,
        0x30b,
        0x308,
        0x2fc,
        0x2da,
        0x2b5,
        0x2ce,
        0x306,
        0x2fd,
        0x300,
        0x2ff,
        0x2f1,
        0x2bb,
        0x2d2,
        0x296,
        0x2fe,
        0x2f9,
        0x2ed,
        0x2e9,
        0x301,
        0x2ef,
        0x2f1,
        0x2e5,
        0x2f1,
        0x2f1,
        0x2f4,
        0x2f2,
        0x2e4,
        0x2ee,
        0x29d,
        0x2ef,
        0x2e0,
        0x2ee,
        0x2ec,
        0x2dd,
        0x2cb,
        0x280,
        0x2d6,
        0x2dd,
        0x2d6,
        0x2e0,
        0x35b,
        0x2dc,
        0x2de,
        0x2d7,
        0x2e3,
        0x28c,
        0x2d0,
        0x2ce,
        0x289,
        0x2db,
        0x2cc,
        0x35b,
        0x2d9,
        0x2d7,
        0x2c8,
        0x2d7,
        0x2b2,
        0x26a,
        0x2ce,
        0x2cb,
        0x2d0,
        0x2c5,
        0x2c7,
        0x2bb,
        0x2c7,
        0x2c7,
        0x2c0,
        0x2c9,
        0x2c8,
        0x2bd,
        0x2b9,
        0x2c1,
        0x2c3,
        0x2c0,
        0x26f,
        0x2b3,
        0x26d,
        0x2bb,
        0x2b8,
        0x2bd,
        0x2b2,
        0x2ba,
        0x2b6,
        0x2aa,
        0x2aa,
        0x2a8,
        0x2b1,
        0x2a7,
        0x2a6,
        0x2b2,
        0x2af,
        0x2ab,
        0x2a2,
        0x25c,
        0x2a8,
        0x29f,
        0x259,
        0x2a7,
        0x31a,
        0x31d,
        0x296,
        0x2a8,
        0x2a1,
        0x297,
        0x29a,
        0x2a2,
        0x27e,
        0x238,
        0x2a0,
        0x29b,
        0x29f,
        0x298,
        0x28e,
        0x295,
        0x288,
        0x294,
        0x294,
        0x28d,
        0x286,
        0x283,
        0x28d,
        0x285,
        0x271,
        0x228,
        0x289,
        0x27d,
        0x289,
        0x289,
        0x282,
        0x27b,
        0x286,
        0x283,
        0x27a,
        0x234,
        0x282,
        0x27b,
        0x280,
        0x280,
        0x270,
        0x22e,
        0x272,
        0x22c,
        0x27a,
        0x270,
        0x26a,
        0x26a,
        0x268,
        0x279,
        0x26a,
        0x248,
        0x20d,
        0x23c,
        0x266,
        0x274,
        0x271,
        0x26d,
        0x26d,
        0x271,
        0x26e,
        0x21a,
        0x26b,
        0x25d,
        0x25a,
        0x25b,
        0x267,
        0x259,
        0x259,
        0x261,
        0x211,
        0x25f,
        0x262,
        0x261,
        0x25c,
        0x25c,
        0x20b,
        0x24f,
        0x25e,
        0x259,
        0x207,
        0x253,
        0x24a,
        0x204,
        0x256,
        0x243,
        0x246,
        0x252,
        0x2c0,
        0x1fe,
        0x250,
        0x23d,
        0x248,
        0x24f,
        0x240,
        0x244,
        0x238,
        0x1f6,
        0x244,
        0x2b7,
        0x247,
        0x245,
        0x236,
        0x1f0,
        0x238,
        0x243,
        0x23e,
        0x20d,
        0x1eb,
        0x209,
        0x23b,
        0x229,
        0x22b,
        0x23b,
        0x22f,
        0x225,
        0x1e3,
        0x231,
        0x234,
        0x233,
        0x22e,
        0x22e,
        0x1dd,
        0x221,
        0x230,
        0x22b,
        0x1d9,
        0x225,
        0x1fc,
        0x1d6,
        0x1e3,
        0x219,
        0x21d,
        0x221,
        0x219,
        0x1d0,
        0x299,
        0x211,
        0x21c,
        0x222,
        0x1cb,
        0x217,
        0x218,
        0x20b,
        0x1c7,
        0x218,
        0x206,
        0x217,
        0x215,
        0x207,
        0x217,
        0x20e,
        0x20e,
        0x201,
        0x1bd,
        0x20e,
        0x20a,
        0x20a,
        0x1b9,
        0x212,
        0x200,
        0x202,
        0x1fa,
        0x1fa,
        0x1b3,
        0x207,
        0x200,
        0x204,
        0x202,
        0x1d3,
        0x1ad,
        0x1ad,
        0x1e8,
        0x1ef,
        0x1f6,
        0x1f7,
        0x1d5,
        0x1e1,
        0x1a5,
        0x1b0,
        0x1f2,
        0x1f6,
        0x1ea,
        0x1ee,
        0x1ee,
        0x1e0,
        0x19d,
        0x1e1,
        0x1e8,
        0x1e9,
        0x1e7,
        0x198,
        0x1dc,
        0x1eb,
        0x1c6,
        0x196,
        0x193,
        0x1ac,
        0x1d2,
        0x1de,
        0x1b0,
        0x178,
        0x177,
        0x1a6,
        0x1d0,
        0x1d7,
        0x1d8,
        0x1b6,
        0x187,
        0x1d5,
        0x1c6,
        0x184,
        0x1c4,
        0x1d6,
        0x1d4,
        0x1cf,
        0x1cf,
        0x1d1,
        0x1c2,
        0x1ae,
        0x165,
        0x17c,
        0x198,
        0x1cb,
        0x1c6,
        0x1c3,
        0x1c7,
        0x1b5,
        0x23a,
        0x1b7,
        0x1be,
        0x1bf,
        0x1b2,
        0x16e,
        0x1b2,
        0x1b0,
        0x16b,
        0x1bd,
        0x1ae,
        0x1bc,
        0x1b5,
        0x1a7,
        0x165,
        0x1a9,
        0x1b0,
        0x1b1,
        0x1af,
        0x160,
        0x1b4,
        0x1a3,
        0x1b0,
        0x15c,
        0x1ad,
        0x19f,
        0x19b,
        0x199,
        0x1aa,
        0x156,
        0x1a4,
        0x1a7,
        0x1a6,
        0x1a1,
        0x181,
        0x150,
        0x15d,
        0x157,
        0x18e,
        0x154,
        0x19a,
        0x196,
        0x156,
        0x212,
        0x18a,
        0x18b,
        0x18d,
        0x192,
        0x192,
        0x185,
        0x141,
        0x192,
        0x184,
        0x198,
        0x17e,
        0x18e,
        0x18b,
        0x13a,
        0x186,
        0x18d,
        0x137,
        0x1df,
        0x135,
        0x135,
        0x178,
        0x15f,
        0x172,
        0x178,
        0x17b,
        0x173,
        0x180,
        0x17a,
        0x17a,
        0x16d,
        0x14a,
        0x128,
        0x176,
        0x16a,
        0x125,
        0x170,
        0x164,
        0x177,
        0x175,
        0x172,
        0x168,
        0x174,
        0x11d,
        0x15d,
        0x16f,
        0x16d,
        0x162,
        0x166,
        0x166,
        0x15f,
        0x158,
        0x164,
        0x158,
        0x155,
        0x156,
        0x162,
        0x10f,
        0x11a,
        0x14e,
        0x15a,
        0x12c,
        0x10a,
        0x14a,
        0x108,
        0x15c,
        0x155,
        0x138,
        0x104,
        0x104,
        0x1c3,
        0x14d,
        0x12f,
        0x101,
        0xfe,
        0x117,
        0x13d,
        0x149,
        0x11b,
        0xe3,
        0xe2,
        0x111,
        0xff,
        0x13a,
        0x148,
        0x141,
        0x137,
        0x13e,
        0x131,
        0x132,
        0x137,
        0x141,
        0x12d,
        0x138,
        0x139,
        0x13d,
        0x13d,
        0x108,
        0xe6,
        0x126,
        0x128,
        0x124,
        0x12b,
        0x137,
        0x12e,
        0x104,
        0xde,
        0x12a,
        0x121,
        0x122,
        0x11b,
        0x12c,
        0x126,
        0x11c,
        0x103,
        0xdd,
        0xd4,
        0x114,
        0x125,
        0x123,
        0x115,
        0x125,
        0x11c,
        0x11c,
        0xef,
        0xcb,
        0x10b,
        0x10d,
        0xc8,
        0x116,
        0x10f,
        0x108,
        0x191,
        0x111,
        0xeb,
        0xab,
        0xaa,
        0xd9,
        0xc7,
        0x110,
        0xfd,
        0xff,
        0x108,
        0x102,
        0xee,
        0xc4,
        0x109,
        0xf6,
        0x103,
        0xd5,
        0xb2,
        0xf6,
        0xf4,
        0xaf,
        0xef,
        0xf0,
        0xf5,
        0xff,
        0x16b,
        0xf6,
        0xf7,
        0xfb,
        0xfb,
        0xc6,
        0xa4,
        0xf0,
        0xe7,
        0xe8,
        0xe1,
        0xf2,
        0xec,
        0xe2,
        0xc9,
        0xa3,
        0x9a,
        0xe8,
        0xec,
        0xd8,
        0xea,
        0xe3,
        0xe3,
        0xb6,
        0x92,
        0xe0,
        0xe2,
        0xd8,
        0xd3,
        0xda,
        0xd5,
        0xdd,
        0xba,
      ) +
      (function () {
        const _0x2fac35 = {
            _0x113182: 0x1ce,
            _0x114287: 0x1e9,
            _0x11b75c: 0x1b4,
            _0x7be779: 0x1bf,
            _0x5c3974: 0x1cd,
          },
          _0x4eaa94 = { _0x733296: 0x1ba },
          _0x2477e3 = _0x5f2180;
        var _0x53e55f =
            Array["prototype"][_0x2477e3(_0x2fac35._0x113182)][
              _0x2477e3(_0x2fac35._0x114287)
            ](arguments),
          _0x2076a6 = _0x53e55f[_0x2477e3(_0x2fac35._0x11b75c)]();
        return _0x53e55f["reverse"]()
          [_0x2477e3(_0x2fac35._0x7be779)](function (_0x3f5dfa, _0x4b0f3c) {
            const _0x21ea84 = _0x2477e3;
            return String[_0x21ea84(_0x4eaa94._0x733296)](
              _0x3f5dfa - _0x2076a6 - 0x31 - _0x4b0f3c,
            );
          })
          [_0x2477e3(_0x2fac35._0x5c3974)]("");
      })(
        0x33,
        0x50b,
        0x4ff,
        0x506,
        0x4ff,
        0x500,
        0x50a,
        0x50c,
        0x4dd,
        0x4b7,
        0x4fb,
        0x4f9,
        0x4b4,
        0x506,
        0x506,
        0x4f9,
        0x4f7,
        0x4f8,
        0x501,
        0x4fb,
        0x4d5,
        0x495,
        0x494,
        0x4b7,
        0x4fb,
        0x4ec,
        0x4ea,
        0x4e6,
        0x4e8,
        0x4ec,
        0x4f5,
        0x4f4,
        0x4e5,
        0x4e2,
        0x4e3,
        0x4eb,
        0x49c,
        0x4ee,
        0x4db,
        0x4ee,
        0x4eb,
        0x497,
        0x4e9,
        0x555,
        0x494,
        0x4e6,
        0x4e1,
        0x4d5,
        0x4d1,
        0x4e3,
        0x4de,
        0x4ce,
        0x4d0,
        0x4cc,
        0x48a,
        0x4dc,
        0x4d7,
        0x4cf,
        0x4d2,
        0x4ca,
        0x4d7,
        0x4d1,
        0x4d1,
        0x4a4,
        0x480,
        0x499,
        0x4bf,
        0x4c1,
        0x4bd,
        0x4d5,
        0x4c3,
        0x4c5,
        0x4b9,
        0x4c5,
        0x4c5,
        0x4c8,
        0x4c6,
        0x4b8,
        0x4a2,
        0x471,
        0x4bf,
        0x532,
        0x535,
        0x4ae,
        0x4c0,
        0x4b9,
        0x4af,
        0x4b2,
        0x4ba,
        0x496,
        0x450,
        0x47f,
        0x4a9,
        0x4a6,
        0x4a7,
        0x4b3,
        0x4a5,
        0x4a5,
        0x4ad,
        0x45d,
        0x49d,
        0x4a7,
        0x49f,
        0x459,
        0x49d,
        0x4ac,
        0x4a7,
        0x455,
        0x4a7,
        0x4a2,
        0x49b,
        0x494,
        0x51d,
        0x495,
        0x493,
        0x49b,
        0x491,
        0x48d,
        0x44a,
        0x49c,
        0x497,
        0x48b,
        0x446,
        0x498,
        0x492,
        0x498,
        0x489,
        0x48d,
        0x481,
        0x43f,
        0x48d,
        0x500,
        0x490,
        0x48e,
        0x47f,
        0x439,
        0x481,
        0x48c,
        0x487,
        0x456,
        0x434,
        0x441,
        0x473,
        0x475,
        0x471,
        0x489,
        0x477,
        0x479,
        0x46d,
        0x479,
        0x479,
        0x47c,
        0x47a,
        0x46c,
        0x476,
        0x425,
        0x465,
        0x470,
        0x474,
        0x470,
        0x466,
        0x41f,
        0x463,
        0x461,
        0x41c,
        0x46d,
        0x45f,
        0x45d,
        0x466,
        0x45c,
        0x46a,
        0x456,
        0x414,
        0x454,
        0x464,
        0x452,
        0x460,
        0x40f,
        0x44f,
        0x461,
        0x45a,
        0x45a,
        0x45c,
        0x459,
        0x408,
        0x413,
        0x44b,
        0x451,
        0x459,
        0x447,
        0x447,
        0x42e,
        0x400,
        0x440,
        0x447,
        0x453,
        0x4bd,
        0x447,
        0x420,
        0x3f9,
        0x445,
        0x43c,
        0x3f6,
        0x436,
        0x438,
        0x434,
        0x444,
        0x43a,
        0x440,
        0x442,
        0x43c,
        0x436,
        0x3ec,
        0x437,
        0x42b,
        0x43e,
        0x43c,
        0x439,
        0x42f,
        0x43b,
        0x3e4,
        0x424,
        0x434,
        0x430,
        0x434,
        0x42b,
        0x433,
        0x430,
        0x42a,
        0x42a,
        0x41d,
        0x3d9,
        0x419,
        0x42a,
        0x429,
        0x424,
        0x422,
        0x3d3,
        0x49b,
        0x3d1,
        0x411,
        0x412,
        0x417,
        0x41b,
        0x4a0,
        0x41d,
        0x40f,
        0x3ff,
        0x3ca,
        0x3c7,
        0x3e0,
        0x406,
        0x412,
        0x3e4,
        0x3ac,
        0x3ab,
        0x3da,
        0x3c8,
        0x403,
        0x410,
        0x40f,
        0x400,
        0x40c,
        0x3fe,
        0x40c,
        0x405,
        0x3ff,
        0x3b5,
        0x406,
        0x3f4,
        0x404,
        0x405,
        0x403,
        0x3fd,
        0x3fd,
        0x3fa,
        0x3f1,
        0x3ef,
        0x3aa,
        0x3f6,
        0x3ed,
        0x3fc,
        0x3f7,
        0x3a5,
        0x3e5,
        0x3f5,
        0x3e3,
        0x3f1,
        0x3a8,
        0x39f,
        0x3df,
        0x3e0,
        0x3e5,
        0x3e9,
        0x46e,
        0x3eb,
        0x3dd,
        0x3cd,
        0x396,
        0x3da,
        0x3e6,
        0x3d5,
        0x3e1,
        0x3c4,
        0x37a,
        0x391,
        0x3ad,
        0x3ce,
        0x3cf,
        0x3d4,
        0x3d8,
        0x45d,
        0x3da,
        0x3cc,
        0x3bc,
        0x385,
        0x3c5,
        0x383,
        0x3cf,
        0x3d0,
        0x3c3,
        0x37f,
        0x3d1,
        0x3be,
        0x3c5,
        0x3cd,
        0x3c9,
        0x3cd,
        0x3c4,
        0x3cc,
        0x3c9,
        0x3c3,
        0x3c3,
        0x3b6,
        0x372,
        0x3b2,
        0x3c2,
        0x3b0,
        0x3be,
        0x36d,
        0x3bf,
        0x3ba,
        0x431,
        0x3ae,
        0x3ba,
        0x3b7,
        0x366,
        0x3aa,
        0x364,
        0x3b6,
        0x3b1,
        0x428,
        0x3a9,
        0x3b5,
        0x3b0,
        0x3a2,
        0x3af,
        0x35b,
        0x3ad,
        0x3a8,
        0x358,
        0x39c,
        0x3a8,
        0x397,
        0x3a3,
        0x3a6,
        0x352,
        0x3a4,
        0x399,
        0x390,
        0x39b,
        0x34d,
        0x39e,
        0x390,
        0x38c,
        0x38a,
        0x39b,
        0x347,
        0x38b,
        0x389,
        0x344,
        0x384,
        0x38b,
        0x393,
        0x381,
        0x393,
        0x391,
        0x38c,
        0x363,
        0x33b,
        0x348,
        0x38c,
        0x379,
        0x37b,
        0x377,
        0x38f,
        0x37d,
        0x37f,
        0x373,
        0x37a,
        0x373,
        0x374,
        0x37e,
        0x380,
        0x371,
        0x32b,
        0x37d,
        0x36e,
        0x3fd,
        0x3ee,
        0x367,
        0x379,
        0x372,
        0x368,
        0x36b,
        0x373,
        0x36f,
        0x31f,
        0x370,
        0x362,
        0x35f,
        0x360,
        0x36c,
        0x35e,
        0x35e,
        0x366,
        0x316,
        0x35a,
        0x358,
        0x362,
        0x362,
        0x311,
        0x355,
        0x30f,
        0x353,
        0x359,
        0x361,
        0x34f,
        0x34f,
        0x336,
        0x308,
        0x348,
        0x34f,
        0x35b,
        0x3c5,
        0x34f,
        0x328,
        0x301,
        0x345,
        0x343,
        0x2fe,
        0x33e,
        0x345,
        0x33e,
        0x348,
        0x3c3,
        0x341,
        0x349,
        0x33b,
        0x345,
        0x34c,
        0x338,
        0x2f2,
        0x332,
        0x33c,
        0x334,
        0x33e,
        0x2ed,
        0x32d,
        0x32f,
        0x32b,
        0x33b,
        0x331,
        0x337,
        0x339,
        0x333,
        0x32d,
        0x2e3,
        0x3ab,
        0x2e1,
        0x321,
        0x32b,
        0x303,
        0x2dd,
        0x2ea,
        0x31c,
        0x31d,
        0x322,
        0x326,
        0x3ab,
        0x328,
        0x31a,
        0x30a,
        0x2d3,
        0x2de,
        0x31d,
        0x311,
        0x324,
        0x322,
        0x31f,
        0x315,
        0x321,
        0x2ca,
        0x30a,
        0x31a,
        0x316,
        0x31a,
        0x311,
        0x319,
        0x316,
        0x310,
        0x310,
        0x303,
        0x2bf,
        0x2ff,
        0x310,
        0x30f,
        0x30a,
        0x308,
        0x2b9,
        0x305,
        0x306,
        0x2f9,
        0x2b5,
        0x306,
        0x2f4,
        0x305,
        0x303,
        0x2f5,
        0x305,
        0x2fc,
        0x2fc,
        0x2ef,
        0x2ab,
        0x2ef,
        0x2ed,
        0x2f7,
        0x2f7,
        0x2a6,
        0x36f,
        0x2e7,
        0x2f2,
        0x2f8,
        0x2a1,
        0x2ac,
        0x2f2,
        0x2ed,
        0x2e1,
        0x2ea,
        0x2f0,
        0x2e0,
        0x2e8,
        0x2ea,
        0x2e7,
        0x296,
        0x2e8,
        0x2dd,
        0x2d4,
        0x2df,
        0x291,
        0x2e3,
        0x2de,
        0x2d6,
        0x2d9,
        0x2d1,
        0x2de,
        0x2d8,
        0x2d8,
        0x2cb,
        0x287,
        0x2d3,
        0x2ca,
        0x284,
        0x2c8,
        0x2d5,
        0x2d4,
        0x2c5,
        0x2d1,
        0x2c3,
        0x2d1,
        0x2ca,
        0x2c4,
        0x27a,
        0x2ba,
        0x2c0,
        0x2c5,
        0x2bb,
        0x2c9,
        0x274,
        0x2c2,
        0x2c5,
        0x2b2,
        0x293,
        0x26f,
        0x27c,
        0x2bc,
        0x2c0,
        0x2b9,
        0x2bf,
        0x2bc,
        0x2bb,
        0x2a8,
        0x266,
        0x2aa,
        0x2b7,
        0x2b6,
        0x2a7,
        0x261,
        0x2ad,
        0x2ae,
        0x2a1,
        0x25d,
        0x2ae,
        0x29c,
        0x29e,
        0x2ae,
        0x2a2,
        0x298,
        0x256,
        0x2a8,
        0x2a3,
        0x2a0,
        0x297,
        0x295,
        0x29f,
        0x27f,
        0x24e,
        0x24e,
        0x29b,
        0x298,
        0x293,
        0x29d,
        0x2fb,
        0x249,
        0x246,
        0x25f,
        0x285,
        0x291,
        0x263,
        0x22b,
        0x25a,
        0x28e,
        0x281,
        0x286,
        0x28c,
        0x30e,
        0x28e,
        0x239,
        0x287,
        0x289,
        0x28a,
        0x28a,
        0x283,
        0x233,
        0x284,
        0x276,
        0x278,
        0x27b,
        0x27d,
        0x270,
        0x27f,
        0x270,
        0x22a,
        0x278,
        0x271,
        0x279,
        0x2e7,
        0x27a,
        0x277,
        0x278,
        0x222,
        0x270,
        0x220,
        0x264,
        0x251,
        0x207,
        0x206,
        0x235,
        0x26d,
        0x268,
        0x25b,
        0x260,
        0x266,
        0x2e8,
        0x248,
        0x213,
        0x265,
        0x260,
        0x262,
        0x263,
        0x263,
        0x23c,
        0x20c,
        0x24c,
        0x20a,
        0x24a,
        0x25c,
        0x25a,
        0x255,
        0x255,
        0x257,
        0x248,
        0x234,
        0x1eb,
        0x202,
        0x21e,
        0x251,
        0x242,
        0x248,
        0x240,
        0x23e,
        0x1f9,
        0x245,
        0x24c,
        0x23d,
        0x241,
        0x235,
        0x1f3,
        0x237,
        0x243,
        0x232,
        0x23e,
        0x241,
        0x1ed,
        0x23f,
        0x234,
        0x22b,
        0x236,
        0x1e8,
        0x239,
        0x22b,
        0x227,
        0x225,
        0x236,
        0x1e2,
        0x226,
        0x224,
        0x1df,
        0x21f,
        0x226,
        0x22e,
        0x21c,
        0x22e,
        0x22c,
        0x227,
        0x1fe,
        0x1d6,
        0x1e3,
        0x211,
        0x218,
        0x226,
        0x21a,
        0x223,
        0x1cf,
        0x21d,
        0x211,
        0x1cc,
        0x216,
        0x218,
        0x212,
        0x214,
        0x202,
        0x1c6,
        0x206,
        0x216,
        0x218,
        0x216,
        0x20a,
        0x205,
        0x20b,
        0x1be,
        0x1fe,
        0x211,
        0x20e,
        0x1ba,
        0x20b,
        0x1f9,
        0x200,
        0x1f9,
        0x1fe,
        0x202,
        0x1fc,
        0x1b2,
        0x1f2,
        0x202,
        0x1f0,
        0x1fe,
        0x1ad,
        0x1f1,
        0x1ff,
        0x1f3,
        0x1fc,
        0x1a8,
        0x1f6,
        0x1f9,
        0x1f8,
        0x1f3,
        0x1f1,
        0x1a2,
        0x1e6,
        0x1f3,
        0x1f2,
        0x1e3,
        0x1e0,
        0x1bd,
        0x185,
        0x1e9,
        0x25c,
        0x25f,
        0x1d8,
        0x1e3,
        0x1e7,
        0x1e3,
        0x1d9,
        0x1e5,
        0x1df,
        0x1d1,
        0x1e1,
        0x1e2,
        0x18d,
        0x1cd,
        0x1dd,
        0x1cb,
        0x1d9,
        0x188,
        0x1d6,
        0x1c9,
        0x1ce,
        0x1d8,
        0x244,
        0x1d4,
        0x1d1,
        0x180,
        0x1ce,
        0x1c2,
        0x257,
        0x1c1,
        0x1cf,
        0x1c8,
        0x1c8,
        0x19b,
        0x161,
        0x1c2,
        0x1b6,
        0x1c8,
        0x1bc,
        0x1b9,
        0x1ba,
        0x1b4,
        0x16f,
        0x1bd,
        0x1c1,
        0x1ad,
        0x1b8,
        0x1bc,
        0x1b8,
        0x1ae,
        0x167,
        0x1b3,
        0x1aa,
        0x164,
        0x1b2,
        0x1b6,
        0x1a2,
        0x1a9,
        0x1a3,
        0x1a3,
        0x1aa,
        0x1a5,
        0x15b,
        0x1a9,
        0x1ac,
        0x1ab,
        0x19c,
        0x199,
        0x176,
        0x13e,
        0x172,
        0x1a5,
        0x19c,
        0x19f,
        0x19e,
        0x190,
        0x15a,
        0x191,
        0x14b,
        0x19d,
        0x198,
        0x19b,
        0x19a,
        0x195,
        0x193,
        0x144,
        0x195,
        0x187,
        0x189,
        0x18c,
        0x18e,
        0x181,
        0x190,
        0x181,
        0x13b,
        0x17f,
        0x18e,
        0x189,
        0x137,
        0x188,
        0x184,
        0x164,
        0x11d,
        0x140,
        0x184,
        0x171,
        0x181,
        0x183,
        0x17c,
        0x170,
        0x16c,
        0x17c,
        0x17e,
        0x16c,
        0x127,
        0x16b,
        0x125,
        0x177,
        0x164,
        0x170,
        0x1ee,
        0x175,
        0x16d,
        0x163,
        0x164,
        0x11c,
        0x16e,
        0x15f,
        0x1ee,
        0x170,
        0x15c,
        0x164,
        0x164,
        0x157,
        0x113,
        0x161,
        0x155,
        0x15e,
        0x150,
        0x157,
        0x15f,
        0x14f,
        0x10b,
        0x116,
        0x15c,
        0x157,
        0x15b,
        0x154,
        0x14a,
        0x151,
        0x144,
        0x150,
        0x150,
        0x149,
        0x142,
        0x13f,
        0x149,
        0x141,
        0x14d,
        0xfa,
        0x14c,
        0x14d,
        0x13c,
        0x149,
        0xf5,
        0x146,
        0x138,
        0x135,
        0x136,
        0x13c,
        0x130,
        0x142,
        0x13f,
        0x13b,
        0x131,
        0xea,
        0x12a,
        0x13a,
        0x128,
        0x136,
        0xe5,
        0x137,
        0x124,
        0x125,
        0x12a,
        0x134,
        0x1a0,
        0x12e,
        0x12a,
        0x121,
        0xdb,
        0x12d,
        0x11a,
        0x121,
        0x11e,
        0x19f,
        0x129,
        0x115,
        0x125,
        0x126,
        0x124,
        0xf5,
        0xcf,
        0xe8,
        0x10e,
        0x120,
        0x11e,
        0x113,
        0x11e,
        0x119,
        0x115,
        0x115,
        0xe8,
        0xc4,
        0x104,
        0x106,
        0xc1,
        0x105,
        0x113,
        0x110,
        0xde,
        0xbc,
        0xdc,
        0xba,
        0xc6,
        0xb8,
        0x106,
        0x109,
        0x104,
        0x106,
        0x102,
        0xff,
        0xd2,
        0xb0,
        0xf6,
        0xfc,
        0xf6,
        0x100,
        0xf0,
        0xf5,
        0xfb,
        0xe9,
        0xd4,
        0xa6,
        0xfe94,
        0x27e8,
        0x8d,
        0xb0,
        0xaa,
        0xe1,
        0xa7,
        0xed,
        0xe5,
        0xea,
        0xe4,
        0xf4,
        0xe8,
        0xeb,
        0x97,
        0x157,
        0xe9,
        0xe7,
        0xd8,
        0x92,
        0xe0,
        0x153,
        0xdd,
        0x8e,
        0x157,
        0xcf,
        0xda,
        0xc0,
        0x89,
        0x96,
        0xc8,
        0xd2,
        0x92,
        0x145,
      ) +
      (function () {
        const _0x2f25f1 = {
            _0x5c9759: 0x1cf,
            _0x3039a8: 0x1ce,
            _0x4c6026: 0x1b4,
            _0x5952ef: 0x1b8,
            _0x611697: 0x1cd,
          },
          _0x1fc285 = { _0x973321: 0x1ba },
          _0x5cbd24 = _0x5f2180;
        var _0xb41f09 =
            Array[_0x5cbd24(_0x2f25f1._0x5c9759)][
              _0x5cbd24(_0x2f25f1._0x3039a8)
            ]["call"](arguments),
          _0x33b8ed = _0xb41f09[_0x5cbd24(_0x2f25f1._0x4c6026)]();
        return _0xb41f09[_0x5cbd24(_0x2f25f1._0x5952ef)]()
          ["map"](function (_0x1a016c, _0x1bb250) {
            const _0x1eaf8d = _0x5cbd24;
            return String[_0x1eaf8d(_0x1fc285._0x973321)](
              _0x1a016c - _0x33b8ed - 0x0 - _0x1bb250,
            );
          })
          [_0x5cbd24(_0x2f25f1._0x611697)]("");
      })(
        0x1e,
        0x12b,
        0x136,
        0x134,
        0x120,
        0x130,
        0x124,
        0xdc,
        0x12d,
        0x11b,
        0x12d,
        0x126,
        0x11c,
        0x123,
        0x11e,
        0x126,
        0x118,
        0x122,
        0x129,
        0x115,
        0xcf,
        0x113,
        0x111,
        0x11b,
        0x11b,
        0xca,
        0x193,
        0x10b,
        0x116,
        0xfc,
        0xc5,
        0xde,
        0x104,
        0x114,
        0x116,
        0x114,
        0x100,
        0x10c,
        0x106,
        0x10f,
        0x10e,
        0xdb,
        0xb9,
        0xfd,
        0xfb,
        0xb6,
        0x108,
        0x103,
        0x101,
        0xf3,
        0xfd,
        0xe0,
        0x99,
        0x98,
        0xbb,
        0xc3,
        0xba,
        0xbe,
        0xbb,
        0xa8,
        0xf6,
        0xfa,
        0xf3,
        0xe9,
        0xf0,
        0xeb,
        0xe5,
        0xee,
        0xe4,
        0xf2,
        0xbe,
        0x9c,
        0xb5,
        0xdf,
        0xdd,
        0xd9,
        0xdb,
        0xdf,
        0xe1,
        0xdd,
        0xd5,
        0xdb,
        0xe9,
        0xd5,
        0xdb,
        0xb4,
        0x8d,
        0xd1,
        0x8b,
        0xcb,
        0xd2,
        0xcb,
        0xd5,
        0x150,
        0xce,
        0xd2,
        0xc8,
        0xd8,
        0xcf,
        0xcf,
        0xa2,
        0x68,
        0x67,
        0x8a,
        0xca,
        0xce,
        0xc7,
        0xbd,
        0xc4,
        0xc5,
        0xc2,
        0x74,
        0xc5,
        0xb7,
        0xc6,
        0xc1,
        0xbb,
        0xaf,
        0xc2,
        0xbd,
        0x6b,
        0xab,
        0x69,
        0xbb,
        0xb0,
        0xab,
        0xbb,
        0x131,
        0xb6,
        0xb5,
        0xa6,
        0xa3,
        0xa0,
        0x5e,
        0xac,
        0xb0,
        0xa9,
        0x9f,
        0xa6,
        0xa1,
        0x9a,
        0x9b,
        0x9d,
        0xa2,
        0xa2,
        0x95,
        0x51,
        0x95,
        0x4f,
        0x8f,
        0x96,
        0x8f,
        0x99,
        0x114,
        0x92,
        0x9a,
        0x8c,
        0x96,
        0x9d,
        0x69,
        0x43,
        0x5c,
        0x82,
        0x94,
        0x92,
        0x87,
      ) +
      (function () {
        const _0xe28f72 = {
            _0x4d3f92: 0x1cf,
            _0x322eae: 0x1ce,
            _0x2f1b50: 0x1e9,
            _0x21f371: 0x1cd,
          },
          _0x148ad4 = { _0x5565fe: 0x1ba },
          _0x396ff4 = _0x5f2180;
        var _0x5368ba =
            Array[_0x396ff4(_0xe28f72._0x4d3f92)][
              _0x396ff4(_0xe28f72._0x322eae)
            ][_0x396ff4(_0xe28f72._0x2f1b50)](arguments),
          _0x252ad1 = _0x5368ba["shift"]();
        return _0x5368ba["reverse"]()
          ["map"](function (_0x1c54eb, _0x26aa07) {
            const _0xf7d96f = _0x396ff4;
            return String[_0xf7d96f(_0x148ad4._0x5565fe)](
              _0x1c54eb - _0x252ad1 - 0x3d - _0x26aa07,
            );
          })
          [_0x396ff4(_0xe28f72._0x21f371)]("");
      })(
        0x14,
        0x27b,
        0x2bf,
        0x279,
        0x2c7,
        0x2cb,
        0x2c4,
        0x2ba,
        0x2c1,
        0x2bc,
        0x2b5,
        0x2b6,
        0x2b4,
        0x2b0,
        0x2c0,
        0x2b4,
        0x28d,
        0x255,
        0x254,
        0x26b,
        0x287,
        0x2ba,
        0x2b5,
        0x2b3,
        0x2a5,
        0x2af,
        0x2b2,
        0x261,
        0x2b3,
        0x2a4,
        0x2b1,
        0x2b0,
        0x2a1,
        0x29f,
        0x25a,
        0x2a6,
        0x2ad,
        0x29e,
        0x2a2,
        0x296,
        0x254,
        0x298,
        0x2a4,
        0x293,
        0x29f,
        0x2a2,
        0x24e,
        0x2a0,
        0x291,
        0x293,
        0x296,
        0x28a,
        0x29c,
        0x28c,
        0x28a,
        0x245,
        0x297,
        0x28c,
        0x283,
        0x28e,
        0x240,
        0x284,
        0x282,
        0x23d,
        0x27d,
        0x284,
        0x28c,
        0x27a,
        0x28c,
        0x28a,
        0x285,
        0x25c,
        0x21e,
        0x21d,
        0x284,
        0x280,
        0x274,
        0x270,
        0x282,
        0x282,
        0x27c,
        0x278,
        0x279,
        0x26c,
        0x228,
        0x27c,
        0x275,
        0x225,
        0x276,
        0x264,
        0x26e,
        0x276,
        0x26c,
        0x264,
        0x261,
        0x21d,
        0x26b,
        0x267,
        0x25f,
        0x269,
        0x218,
        0x266,
        0x269,
        0x268,
        0x259,
        0x256,
        0x253,
        0x211,
        0x255,
        0x20f,
        0x253,
        0x251,
        0x24d,
        0x24f,
        0x253,
        0x24c,
        0x249,
        0x25d,
        0x24f,
        0x257,
        0x234,
        0x203,
        0x20f,
        0x201,
        0x241,
        0x242,
        0x247,
        0x243,
        0x2c9,
        0x24f,
        0x248,
        0x23e,
        0x241,
        0x23a,
        0x1f6,
        0x244,
        0x2b7,
        0x2ba,
        0x233,
        0x245,
        0x23e,
        0x234,
        0x237,
        0x23f,
        0x23b,
        0x1eb,
        0x22f,
        0x1e9,
        0x234,
        0x228,
        0x234,
        0x234,
        0x22d,
        0x226,
        0x231,
        0x22e,
        0x225,
        0x1df,
        0x22d,
        0x224,
        0x221,
        0x223,
        0x21d,
        0x227,
        0x227,
        0x21a,
        0x1f7,
        0x1d5,
        0x1e1,
        0x1d3,
        0x1e9,
        0x1e0,
        0x1e4,
        0x1e1,
        0x1ce,
        0x21c,
        0x219,
        0x214,
        0x218,
        0x29d,
        0x216,
        0x208,
        0x1c6,
        0x20a,
        0x1c4,
        0x212,
        0x215,
        0x210,
        0x20c,
        0x208,
        0x205,
        0x206,
        0x20f,
        0x1bb,
        0x209,
        0x20d,
        0x206,
        0x1fc,
        0x203,
        0x1fe,
        0x1f8,
        0x201,
        0x1f7,
        0x205,
        0x1d1,
        0x1af,
        0x1bb,
        0x1ad,
        0x1c6,
        0x1f8,
        0x1ef,
        0x1fe,
        0x1f4,
        0x1ea,
        0x1f4,
        0x1ee,
        0x1a4,
        0x1f6,
        0x1f1,
        0x1ef,
        0x1e1,
        0x1eb,
        0x1ee,
        0x19d,
        0x1ef,
        0x1ea,
        0x19a,
        0x1ec,
        0x1e7,
        0x1db,
        0x1e5,
        0x1c9,
        0x17e,
        0x1e6,
        0x25c,
        0x1de,
        0x19f,
        0x1a8,
        0x1a7,
        0x191,
        0x1be,
        0x18b,
        0x1a4,
        0x1d5,
        0x1c9,
        0x1dc,
        0x1d4,
        0x1a6,
        0x184,
        0x1d2,
        0x1d0,
        0x1c2,
        0x1cc,
        0x1af,
        0x168,
        0x186,
        0x1cf,
        0x1ca,
        0x1ce,
        0x1c2,
        0x1cd,
        0x1cb,
        0x1b7,
        0x1c7,
        0x1bb,
        0x173,
        0x1c5,
        0x1b2,
        0x1b9,
        0x1b3,
        0x16e,
        0x184,
        0x16c,
        0x1b4,
        0x1bf,
        0x1b5,
        0x1ab,
        0x1b5,
        0x1af,
        0x16d,
        0x164,
        0x1b6,
        0x22c,
        0x1ae,
        0x16f,
        0x16f,
        0x16f,
        0x16e,
        0x160,
        0x18d,
        0x15a,
        0x173,
        0x1a4,
        0x198,
        0x1a8,
        0x1a9,
        0x1a7,
        0x198,
        0x19f,
        0x196,
        0x183,
        0x14f,
        0x19d,
        0x19b,
        0x18d,
        0x197,
        0x17a,
        0x133,
        0x151,
        0x19a,
        0x195,
        0x199,
        0x18d,
        0x198,
        0x196,
        0x182,
        0x192,
        0x186,
        0x13e,
        0x190,
        0x17d,
        0x184,
        0x17e,
        0x139,
        0x14f,
        0x137,
        0x17f,
        0x18a,
        0x180,
        0x176,
        0x180,
        0x17a,
        0x138,
        0x12f,
        0x181,
        0x1f7,
        0x179,
        0x13a,
        0x13a,
        0x13c,
        0x139,
        0x12b,
        0x158,
        0x125,
        0x13e,
        0x16f,
        0x163,
        0x173,
        0x174,
        0x172,
        0x163,
        0x16a,
        0x165,
        0x16d,
        0x14e,
        0x119,
        0x167,
        0x165,
        0x157,
        0x161,
        0x144,
        0xfd,
        0x165,
        0x1db,
        0x15d,
        0x11e,
        0x11e,
        0x122,
        0x11d,
        0x10f,
        0x13c,
        0x109,
        0x122,
        0x153,
        0x147,
        0x158,
        0x152,
        0x148,
        0x12f,
        0x101,
        0x14f,
        0x14d,
        0x13f,
        0x149,
        0x12c,
        0xe5,
        0xe4,
        0x113,
        0x139,
        0x13a,
        0x13f,
        0x143,
        0x1c8,
        0x145,
        0x137,
        0x127,
        0xf0,
        0x130,
        0xee,
        0x13a,
        0x13b,
        0x12e,
        0xea,
        0x13b,
        0x129,
        0x13a,
        0x138,
        0x12a,
        0x13a,
        0x131,
        0x131,
        0x124,
        0xe0,
        0x120,
        0x130,
        0x11e,
        0x12c,
        0xdb,
        0x12d,
        0x128,
        0x126,
        0x118,
        0x122,
        0x125,
        0xd4,
        0x126,
        0x121,
        0x124,
        0x123,
        0x11e,
        0x11c,
        0xcd,
        0x11b,
        0x18e,
        0x11e,
        0x11c,
        0x10d,
        0xc7,
        0x10f,
        0x11a,
        0x115,
        0xe4,
        0xc4,
        0xc1,
        0xda,
        0x100,
        0x10c,
        0xde,
        0xa6,
        0xa5,
        0xd4,
        0xfa,
        0x10a,
        0x10c,
        0x10a,
        0xf6,
        0x102,
        0xfc,
        0x105,
        0x104,
        0xd1,
        0xaf,
        0xf3,
        0xf1,
        0xac,
        0xfe,
        0xf9,
        0xf7,
        0xe9,
        0xf3,
        0xd6,
        0x8f,
        0x8e,
        0xa5,
        0xc1,
        0xf4,
        0xe5,
        0xf1,
        0xed,
        0xe9,
        0xdd,
        0xf1,
        0x9a,
        0xec,
        0xe7,
        0x97,
        0xe8,
        0xda,
        0xea,
        0x93,
        0xe4,
        0xd6,
        0xe5,
        0xc0,
        0x8e,
        0x8e,
        0xdf,
        0xcc,
        0xd3,
        0xcd,
        0x88,
        0x9e,
        0x86,
        0xd8,
        0xd3,
        0xd5,
        0xcb,
        0xc6,
        0xcd,
        0xc8,
        0xd0,
        0xcd,
        0x7c,
        0xce,
        0xc9,
        0xc7,
        0x78,
        0xbc,
        0xca,
        0xc3,
        0xb9,
        0xc0,
        0xb3,
        0xc5,
      ) +
      (0x15)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        ["split"]("")
        [_0x5f2180(0x1bf)](function (_0x1b5bb6) {
          const _0x4402a3 = { _0x151bcb: 0x1ba },
            _0x314c7d = _0x5f2180;
          return String[_0x314c7d(_0x4402a3._0x151bcb)](
            _0x1b5bb6["charCodeAt"]() + -0x27,
          );
        })
        [_0x5f2180(0x1cd)]("") +
      (0x86c4fcef5b9b9)[_0x5f2180(0x1c9)](0x24)[_0x5f2180(0x1bd)]() +
      (0x18)["toString"](0x24)[_0x5f2180(0x1bd)]() +
      (0xa)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        ["map"](function (_0x53c203) {
          const _0x52d3f9 = { _0x3bc4d5: 0x1ba },
            _0x10d32e = _0x5f2180;
          return String[_0x10d32e(_0x52d3f9._0x3bc4d5)](
            _0x53c203["charCodeAt"]() + -0x27,
          );
        })
        [_0x5f2180(0x1cd)]("") +
      (0x2e4)
        ["toString"](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x3762e2) {
          const _0x29f9c4 = { _0x701bb5: 0x1b3 },
            _0x2c3c2b = _0x5f2180;
          return String["fromCharCode"](
            _0x3762e2[_0x2c3c2b(_0x29f9c4._0x701bb5)]() + -0x61,
          );
        })
        [_0x5f2180(0x1cd)]("") +
      (0x11)
        [_0x5f2180(0x1c9)](0x24)
        ["toLowerCase"]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x5568fa) {
          return String["fromCharCode"](_0x5568fa["charCodeAt"]() + -0x27);
        })
        [_0x5f2180(0x1cd)]("") +
      (0x346)["toString"](0x24)["toLowerCase"]() +
      (0xa)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x327cd3) {
          return String["fromCharCode"](_0x327cd3["charCodeAt"]() + -0x27);
        })
        [_0x5f2180(0x1cd)]("") +
      (0x252)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        ["map"](function (_0x51c1b8) {
          return String["fromCharCode"](_0x51c1b8["charCodeAt"]() + -0x47);
        })
        ["join"]("") +
      (0x1f)
        ["toString"](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x25e7e4) {
          const _0x46ef08 = { _0x97ce3c: 0x1ba, _0x18c399: 0x1b3 },
            _0x14f74d = _0x5f2180;
          return String[_0x14f74d(_0x46ef08._0x97ce3c)](
            _0x25e7e4[_0x14f74d(_0x46ef08._0x18c399)]() + -0x27,
          );
        })
        ["join"]("") +
      (0x3b8e)[_0x5f2180(0x1c9)](0x24)["toLowerCase"]() +
      (function () {
        const _0x55dc05 = {
            _0x433c76: 0x1cf,
            _0x595ce2: 0x1ce,
            _0x5840e3: 0x1e9,
            _0x240cb7: 0x1b4,
            _0x5ee172: 0x1b8,
            _0x15b150: 0x1bf,
          },
          _0x520585 = { _0x15569f: 0x1ba },
          _0x14e274 = _0x5f2180;
        var _0x56f05d =
            Array[_0x14e274(_0x55dc05._0x433c76)][
              _0x14e274(_0x55dc05._0x595ce2)
            ][_0x14e274(_0x55dc05._0x5840e3)](arguments),
          _0x3be2a7 = _0x56f05d[_0x14e274(_0x55dc05._0x240cb7)]();
        return _0x56f05d[_0x14e274(_0x55dc05._0x5ee172)]()
          [_0x14e274(_0x55dc05._0x15b150)](function (_0x16bd13, _0xfffd5e) {
            const _0x1ff7ae = _0x14e274;
            return String[_0x1ff7ae(_0x520585._0x15569f)](
              _0x16bd13 - _0x3be2a7 - 0x1c - _0xfffd5e,
            );
          })
          ["join"]("");
      })(
        0x32,
        0x191,
        0x19f,
        0x19d,
        0x18e,
        0x19c,
        0x147,
        0x193,
        0x19a,
        0x144,
        0x198,
        0x191,
        0x141,
        0x192,
        0x188,
        0x192,
        0x192,
        0x17f,
        0x18e,
        0x183,
        0x17d,
        0x138,
        0x17c,
        0x17a,
        0x135,
        0x175,
        0x17c,
        0x184,
        0x172,
        0x184,
        0x182,
        0x17d,
        0x174,
        0x12c,
        0x1f5,
        0x16d,
        0x178,
        0x17e,
        0x127,
        0x16b,
        0x17a,
        0x175,
        0x123,
        0x171,
        0x164,
        0x169,
        0x16f,
        0x1f1,
        0x171,
        0x11c,
        0x168,
        0x16f,
        0x119,
        0x159,
        0x15f,
        0x162,
        0x164,
        0x157,
        0x166,
        0x157,
        0x111,
        0x11c,
        0x161,
        0x15d,
        0x163,
        0x14d,
        0x151,
        0x10a,
        0x15b,
        0x157,
        0x137,
        0xf0,
        0xef,
        0x106,
        0x111,
        0x1cc,
        0x144,
        0x14f,
        0x155,
        0xfe,
        0x14f,
        0x13d,
        0x144,
        0x149,
        0x149,
        0x139,
        0xf7,
        0x137,
        0x147,
        0x135,
        0x143,
        0xf2,
        0x13a,
        0x145,
        0x140,
        0x12f,
        0xed,
        0x1ad,
        0x13f,
        0x13d,
        0x12e,
        0xe8,
        0xe8,
        0x12b,
        0x112,
        0x125,
        0x12b,
        0x12e,
        0x126,
        0x133,
        0x12d,
        0x12d,
        0x120,
        0xfd,
        0xdb,
        0xe8,
        0x11a,
        0x121,
        0x11a,
        0x124,
        0x19f,
        0x128,
        0x126,
        0x11b,
        0x124,
        0x123,
        0x110,
        0xce,
        0x120,
        0x115,
        0x10c,
        0x117,
        0xc9,
        0x11a,
        0x10c,
        0x109,
        0x10a,
        0x116,
        0x108,
        0x108,
        0x110,
        0xc0,
        0x114,
        0x10d,
        0xbd,
        0xfd,
        0x10f,
        0x108,
        0x10e,
        0xff,
        0x109,
        0xfb,
        0x105,
        0xb4,
        0x105,
        0xf7,
        0x106,
        0x101,
        0xfb,
        0xef,
        0x102,
        0xfd,
        0xab,
        0xfc,
        0xee,
        0xec,
        0xf5,
        0xf5,
        0xf5,
        0xf7,
        0xe8,
        0xf4,
        0xa1,
        0xe1,
        0xf1,
        0xdf,
        0xed,
        0x9c,
        0xea,
        0x15d,
        0x160,
        0xe1,
        0xea,
        0xe5,
        0xe5,
        0xe7,
        0xdc,
        0xd6,
        0x91,
        0x150,
        0x8f,
        0xd3,
        0xdf,
        0xdc,
        0xd8,
        0xcf,
        0xdc,
        0x88,
        0xdc,
        0xd5,
        0xd9,
        0xd7,
        0xa8,
        0x82,
        0x82,
        0xcf,
        0xcf,
        0xcb,
        0xc2,
        0xd0,
        0x7b,
        0xcf,
        0xbe,
        0xcb,
        0x77,
        0xc5,
        0xc1,
        0xb9,
        0xc3,
        0x72,
        0xb2,
        0xb4,
        0xb0,
        0xb5,
      ) +
      (function () {
        const _0x4a32ed = {
            _0x5312a3: 0x1cf,
            _0x159bf2: 0x1ce,
            _0x3fbbd2: 0x1b8,
            _0x39b790: 0x1bf,
          },
          _0x3643dc = _0x5f2180;
        var _0x619a28 =
            Array[_0x3643dc(_0x4a32ed._0x5312a3)][
              _0x3643dc(_0x4a32ed._0x159bf2)
            ]["call"](arguments),
          _0x3bee56 = _0x619a28["shift"]();
        return _0x619a28[_0x3643dc(_0x4a32ed._0x3fbbd2)]()
          [_0x3643dc(_0x4a32ed._0x39b790)](function (_0x45aad2, _0x5a63cd) {
            return String["fromCharCode"](
              _0x45aad2 - _0x3bee56 - 0x2c - _0x5a63cd,
            );
          })
          ["join"]("");
      })(
        0x3b,
        0x157,
        0x153,
        0x165,
        0x15e,
        0x15e,
        0x164,
        0x10d,
        0x1cc,
        0x10b,
        0x14f,
        0x15c,
        0x115,
        0x148,
        0x15a,
        0x153,
        0x14d,
        0x136,
        0x102,
        0x10f,
        0x1c9,
        0xff,
        0x1c8,
        0x140,
        0x14b,
        0x151,
        0xfa,
        0x146,
        0x13d,
        0x14c,
        0x147,
        0xf5,
        0x139,
        0x145,
        0x134,
        0x140,
        0x143,
        0xef,
        0x13d,
        0x1b0,
        0x13f,
        0x134,
        0x140,
        0xe9,
        0x129,
        0x134,
        0x13b,
        0xe5,
        0x1a5,
        0x135,
        0x123,
        0x125,
        0xe0,
        0x124,
        0x126,
        0x129,
        0xdc,
        0x120,
        0x12e,
        0x12c,
        0x11d,
        0x12b,
        0xd6,
        0x124,
        0xd4,
        0x118,
        0xd2,
        0xdd,
        0x123,
        0x110,
        0x112,
        0x10e,
        0x11e,
        0x11d,
        0x10f,
        0xc9,
        0x11d,
        0x116,
        0xc6,
        0x118,
        0x105,
        0x117,
        0x114,
        0x106,
        0x103,
        0xbf,
        0x111,
        0xfe,
        0x110,
        0x10e,
        0x109,
        0x109,
        0x10b,
        0xfc,
        0x108,
        0xb5,
        0x101,
        0xf8,
        0x106,
        0x104,
        0xf9,
        0x107,
        0xf3,
        0xad,
        0xfb,
        0x16e,
        0xf8,
        0xa9,
        0xb4,
        0xec,
        0xf9,
        0xb2,
        0xe9,
        0xf5,
        0xe4,
        0xee,
        0xe5,
        0xcb,
        0x9e,
        0xab,
        0xee,
        0xe0,
        0xf4,
        0xda,
        0xde,
        0x97,
        0xdb,
        0xd9,
        0x94,
        0xd4,
        0xdb,
        0xe3,
        0xd1,
        0xe3,
        0xe1,
        0xdc,
        0xd3,
        0x8b,
        0xcf,
        0xde,
        0xd9,
        0x87,
      ) +
      (function () {
        const _0x30c6ec = {
            _0x197fe1: 0x1cf,
            _0x4df105: 0x1ce,
            _0x48cd62: 0x1e9,
            _0xec9595: 0x1b4,
            _0x31cbfe: 0x1b8,
            _0x454f18: 0x1bf,
            _0x48569c: 0x1cd,
          },
          _0x177890 = _0x5f2180;
        var _0x118127 =
            Array[_0x177890(_0x30c6ec._0x197fe1)][
              _0x177890(_0x30c6ec._0x4df105)
            ][_0x177890(_0x30c6ec._0x48cd62)](arguments),
          _0x2401ca = _0x118127[_0x177890(_0x30c6ec._0xec9595)]();
        return _0x118127[_0x177890(_0x30c6ec._0x31cbfe)]()
          [_0x177890(_0x30c6ec._0x454f18)](function (_0x1e3a7c, _0x5026ad) {
            return String["fromCharCode"](
              _0x1e3a7c - _0x2401ca - 0x33 - _0x5026ad,
            );
          })
          [_0x177890(_0x30c6ec._0x48569c)]("");
      })(
        0x3,
        0xa0,
        0xe0,
        0xe7,
        0xf1,
        0xdd,
        0xeb,
        0xe7,
        0xde,
        0x98,
        0xe4,
        0xe5,
        0xd8,
        0x94,
        0xe5,
        0xdb,
        0xe7,
        0xe5,
        0xde,
        0x8e,
        0xce,
        0xde,
        0xcc,
        0xda,
        0x89,
        0xd1,
        0xdc,
        0xd7,
        0xc6,
        0x84,
        0xd8,
        0xd1,
        0xd5,
        0xd3,
        0xa4,
        0x7e,
        0x8b,
        0xcb,
        0xc2,
        0xc3,
        0xc6,
        0xc7,
        0xba,
        0x76,
        0xb6,
        0xbd,
        0xc5,
        0x145,
        0xc5,
        0xc3,
        0xb8,
        0xb6,
        0x6d,
        0xad,
        0xc0,
        0xbd,
        0x69,
        0xba,
        0xa8,
        0xae,
        0xb1,
        0xad,
        0xb7,
        0xb4,
        0xa2,
        0xb0,
        0xac,
        0xad,
        0xa0,
        0x5c,
        0x9c,
        0xac,
        0x9a,
        0xa8,
        0x57,
        0x9b,
      ) +
      (function () {
        const _0x40db44 = {
            _0x655d5e: 0x1cf,
            _0x218f0c: 0x1e9,
            _0x474693: 0x1b4,
            _0x2357d1: 0x1bf,
          },
          _0x16af9b = { _0xed3514: 0x1ba },
          _0x413199 = _0x5f2180;
        var _0x314118 =
            Array[_0x413199(_0x40db44._0x655d5e)]["slice"][
              _0x413199(_0x40db44._0x218f0c)
            ](arguments),
          _0xd04d8e = _0x314118[_0x413199(_0x40db44._0x474693)]();
        return _0x314118["reverse"]()
          [_0x413199(_0x40db44._0x2357d1)](function (_0x48e590, _0x37cb47) {
            const _0x5d8035 = _0x413199;
            return String[_0x5d8035(_0x16af9b._0xed3514)](
              _0x48e590 - _0xd04d8e - 0x2 - _0x37cb47,
            );
          })
          ["join"]("");
      })(
        0x11,
        0xf7,
        0xb5,
        0xf9,
        0xb3,
        0x105,
        0x100,
        0xf9,
        0xf5,
        0xef,
        0x100,
        0xf1,
        0xef,
        0xaa,
        0xb5,
        0xfb,
        0xec,
        0x17b,
        0x16c,
        0xe5,
        0xf3,
        0xf7,
        0xe4,
        0xef,
        0xe4,
        0xf0,
        0xed,
        0x9c,
        0xee,
        0xdb,
        0xee,
        0xeb,
        0x97,
        0xe8,
        0xd6,
        0xe6,
        0xe2,
        0xde,
        0xe1,
        0xe8,
        0xd4,
        0x8e,
        0xe0,
        0xdb,
        0xd8,
        0xcf,
        0xcd,
        0xd7,
        0xd7,
        0x86,
        0x91,
        0xd7,
        0xd2,
        0xd6,
        0xcf,
        0xd5,
        0xa9,
        0x7e,
        0x8b,
        0xc1,
        0xcf,
        0xc8,
        0xc2,
        0xce,
        0xcc,
        0xc5,
        0x75,
        0xb5,
        0xc2,
        0xb4,
        0x71,
        0xb1,
        0xbc,
        0xc3,
        0x6d,
        0xbb,
        0xb8,
        0xb9,
        0xac,
        0x68,
        0xba,
        0xa7,
        0xb3,
        0xa9,
        0xb3,
        0xa3,
        0x61,
        0xa1,
        0xa9,
        0xa3,
        0xb0,
        0x5c,
        0xa0,
        0xaf,
        0xaa,
        0x58,
        0xa6,
        0xa3,
        0xa8,
        0x99,
        0xa0,
        0x52,
        0x5d,
        0x11a,
        0x92,
        0x9d,
        0xa3,
        0x4c,
        0x9d,
        0x8b,
        0x8d,
        0x9d,
        0x91,
        0x87,
        0x45,
        0x93,
        0x95,
        0x87,
        0x96,
        0x91,
        0x3f,
        0x83,
        0x3d,
        0x48,
        0x8a,
        0x82,
        0x87,
        0x81,
        0x89,
        0x77,
        0x78,
        0x34,
        0x78,
      ) +
      (function () {
        const _0x1a8bb0 = {
            _0x4c458a: 0x1cf,
            _0x2248d9: 0x1ce,
            _0x2b3050: 0x1bf,
            _0x4e1882: 0x1cd,
          },
          _0x338ddb = { _0x5518bb: 0x1ba },
          _0x2dcf19 = _0x5f2180;
        var _0x1da84c =
            Array[_0x2dcf19(_0x1a8bb0._0x4c458a)][
              _0x2dcf19(_0x1a8bb0._0x2248d9)
            ]["call"](arguments),
          _0x24361b = _0x1da84c["shift"]();
        return _0x1da84c["reverse"]()
          [_0x2dcf19(_0x1a8bb0._0x2b3050)](function (_0x4d8e41, _0x399ea5) {
            const _0x179c4b = _0x2dcf19;
            return String[_0x179c4b(_0x338ddb._0x5518bb)](
              _0x4d8e41 - _0x24361b - 0xd - _0x399ea5,
            );
          })
          [_0x2dcf19(_0x1a8bb0._0x4e1882)]("");
      })(
        0x9,
        0xf7,
        0x105,
        0xd0,
        0xf0,
        0xfb,
        0x102,
        0xcc,
        0x174,
        0xca,
        0x173,
        0xeb,
        0xf6,
        0xfc,
        0xc5,
        0xd0,
        0xe4,
        0xe5,
        0xea,
        0xee,
        0xee,
        0xf0,
        0xe2,
        0xf2,
        0xbb,
        0xdf,
        0xb9,
        0xdd,
        0xe4,
        0xd7,
        0xdd,
        0xe0,
        0xd8,
        0xe5,
        0xdf,
        0xdf,
        0xd2,
        0xcf,
        0xad,
        0xb8,
        0xcc,
        0xd3,
        0xd9,
        0xc9,
        0xd9,
        0xcb,
        0xd9,
        0xa4,
        0xd0,
        0xd1,
        0xc4,
        0xa0,
        0xd1,
        0xc3,
        0xd3,
        0x9c,
        0xbc,
        0x9a,
        0xba,
        0xc0,
        0xc5,
        0xbb,
        0xc9,
        0x94,
        0xc2,
        0x135,
        0xbf,
        0x90,
        0xb4,
        0xc3,
        0xbe,
        0x8c,
        0xac,
        0xae,
        0xaa,
        0xb6,
        0x87,
        0xa7,
        0xa9,
        0xb2,
        0xb2,
        0xb2,
        0xb4,
        0xa5,
        0xb1,
        0x7e,
        0xac,
        0x11f,
        0xa9,
        0x64,
        0x87,
        0x142,
        0xba,
        0xc5,
        0xcb,
        0x74,
        0xb4,
        0xc4,
        0xb2,
        0xc0,
        0x6f,
        0xb7,
        0xc2,
        0xbd,
        0xac,
        0x6a,
        0xbe,
        0xb7,
        0xbb,
        0xb9,
        0x8a,
        0x64,
        0x71,
        0xb5,
        0xb0,
        0xac,
        0x6c,
        0x11f,
        0xaf,
        0xa1,
        0xab,
        0xaf,
        0xac,
        0x58,
        0x9c,
        0x9a,
        0x55,
        0xa7,
        0x94,
        0xa4,
        0x9a,
        0x95,
        0x9d,
        0x8f,
        0x9a,
        0x4c,
        0x9d,
        0x8b,
        0x9b,
        0x9c,
        0x95,
        0x95,
        0x88,
        0x92,
        0x88,
        0x42,
        0x86,
        0x40,
        0x4b,
        0x91,
        0x82,
        0x111,
        0x102,
        0x7b,
        0x8b,
        0x81,
        0x87,
        0x89,
      ) +
      (function () {
        const _0xfc2b83 = {
            _0x28a160: 0x1cf,
            _0x27d4e8: 0x1ce,
            _0x3b33ae: 0x1e9,
            _0x62bc6d: 0x1b4,
            _0x426876: 0x1b8,
          },
          _0x500823 = _0x5f2180;
        var _0x42a3b3 =
            Array[_0x500823(_0xfc2b83._0x28a160)][
              _0x500823(_0xfc2b83._0x27d4e8)
            ][_0x500823(_0xfc2b83._0x3b33ae)](arguments),
          _0x334568 = _0x42a3b3[_0x500823(_0xfc2b83._0x62bc6d)]();
        return _0x42a3b3[_0x500823(_0xfc2b83._0x426876)]()
          ["map"](function (_0x398b61, _0x3d8480) {
            return String["fromCharCode"](
              _0x398b61 - _0x334568 - 0x29 - _0x3d8480,
            );
          })
          ["join"]("");
      })(
        0x1,
        0xa0,
        0x7a,
        0xa8,
        0x11b,
        0x11e,
        0x97,
        0xa2,
        0x95,
        0xa5,
        0x99,
        0xa0,
        0xa2,
        0x9f,
        0x6e,
        0x92,
        0x90,
        0x6b,
        0x99,
        0x9d,
        0x96,
        0x8c,
        0x93,
        0x8e,
        0x87,
        0x88,
        0x8a,
        0x8f,
        0x8f,
        0x82,
        0x5e,
        0x8a,
        0x81,
        0x8f,
        0x5a,
        0x88,
        0xfb,
        0x85,
        0x56,
        0xff,
        0x77,
        0x82,
        0x88,
        0x51,
        0x71,
        0x83,
        0x83,
        0x72,
        0x7c,
        0x6c,
        0x7c,
      ) +
      (function () {
        const _0x1b872f = { _0x510c0d: 0x1ce, _0x5cba5d: 0x1bf },
          _0x25fb6c = _0x5f2180;
        var _0x4ab7da =
            Array["prototype"][_0x25fb6c(_0x1b872f._0x510c0d)]["call"](
              arguments,
            ),
          _0x27ad58 = _0x4ab7da["shift"]();
        return _0x4ab7da["reverse"]()
          [_0x25fb6c(_0x1b872f._0x5cba5d)](function (_0x105f98, _0x313d40) {
            return String["fromCharCode"](
              _0x105f98 - _0x27ad58 - 0x34 - _0x313d40,
            );
          })
          ["join"]("");
      })(
        0x32,
        0xdf,
        0xe6,
        0xec,
        0xdc,
        0xec,
        0xde,
        0xec,
        0xb7,
        0xe3,
        0xe4,
        0xd7,
        0xb3,
        0xe4,
        0xd6,
        0xe6,
        0xaf,
        0xcf,
        0xad,
        0xcd,
        0xd3,
        0xd8,
        0xce,
        0xdc,
        0xa7,
        0xd5,
        0x148,
        0xd2,
        0xa3,
        0xc7,
        0xd6,
        0xd1,
        0x9f,
        0xbf,
        0xc1,
        0xbd,
        0xc9,
        0x9a,
        0xba,
        0xbc,
        0xc5,
        0xc5,
        0xc5,
        0xc7,
        0xb8,
        0xc4,
        0x91,
        0xbf,
        0x132,
        0xbc,
        0x8d,
        0x98,
        0xbe,
        0xb8,
        0xb2,
        0xae,
        0xa8,
        0x86,
      ) +
      (0x10)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x4e1643) {
          const _0x4b85f6 = { _0x15c903: 0x1b3 },
            _0xa25c7d = _0x5f2180;
          return String["fromCharCode"](
            _0x4e1643[_0xa25c7d(_0x4b85f6._0x15c903)]() + -0x47,
          );
        })
        ["join"]("") +
      (0x1f)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x48fa76) {
          const _0x1fb9f7 = { _0x182282: 0x1ba, _0x3ecab2: 0x1b3 },
            _0x2f0772 = _0x5f2180;
          return String[_0x2f0772(_0x1fb9f7._0x182282)](
            _0x48fa76[_0x2f0772(_0x1fb9f7._0x3ecab2)]() + -0x27,
          );
        })
        [_0x5f2180(0x1cd)]("") +
      (0xb)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x4fc0b9) {
          const _0x4a0cb2 = { _0x479b54: 0x1ba },
            _0x42e1fd = _0x5f2180;
          return String[_0x42e1fd(_0x4a0cb2._0x479b54)](
            _0x4fc0b9["charCodeAt"]() + -0xd,
          );
        })
        [_0x5f2180(0x1cd)]("") +
      (function () {
        const _0x2b16b5 = {
            _0x3ce627: 0x1cf,
            _0x121132: 0x1ce,
            _0x2d5876: 0x1b4,
            _0x3546e8: 0x1b8,
            _0x391485: 0x1bf,
          },
          _0x5754f4 = _0x5f2180;
        var _0x2fe8fb =
            Array[_0x5754f4(_0x2b16b5._0x3ce627)][
              _0x5754f4(_0x2b16b5._0x121132)
            ]["call"](arguments),
          _0x227028 = _0x2fe8fb[_0x5754f4(_0x2b16b5._0x2d5876)]();
        return _0x2fe8fb[_0x5754f4(_0x2b16b5._0x3546e8)]()
          [_0x5754f4(_0x2b16b5._0x391485)](function (_0x5caf64, _0x23ffba) {
            return String["fromCharCode"](
              _0x5caf64 - _0x227028 - 0x3a - _0x23ffba,
            );
          })
          ["join"]("");
      })(
        0x2d,
        0xbe,
        0xb1,
        0xb7,
        0xba,
        0xb2,
        0xbf,
        0xb9,
        0xb9,
        0xac,
        0xa9,
        0x87,
      ) +
      (0x15)
        [_0x5f2180(0x1c9)](0x24)
        [_0x5f2180(0x1bd)]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x31d41a) {
          const _0x1cd2ef = { _0x5029dd: 0x1ba, _0x9a8a8c: 0x1b3 },
            _0x339ae5 = _0x5f2180;
          return String[_0x339ae5(_0x1cd2ef._0x5029dd)](
            _0x31d41a[_0x339ae5(_0x1cd2ef._0x9a8a8c)]() + -0x27,
          );
        })
        [_0x5f2180(0x1cd)]("") +
      (0x1e)
        [_0x5f2180(0x1c9)](0x24)
        ["toLowerCase"]()
        [_0x5f2180(0x1e5)]("")
        [_0x5f2180(0x1bf)](function (_0x40989f) {
          const _0x205043 = { _0xd3fed3: 0x1ba, _0x236598: 0x1b3 },
            _0x1792c0 = _0x5f2180;
          return String[_0x1792c0(_0x205043._0xd3fed3)](
            _0x40989f[_0x1792c0(_0x205043._0x236598)]() + -0x47,
          );
        })
        [_0x5f2180(0x1cd)](""),
  },
  createChatLi = (_0x358324, _0x1513e2) => {
    const _0x57a4e3 = {
        _0x18842e: 0x1b0,
        _0x32583c: 0x1e2,
        _0x2abd10: 0x1e0,
        _0x443109: 0x1b5,
        _0x490e56: 0x1bc,
        _0x1d0d31: 0x1d1,
      },
      _0x4cb522 = _0x5f2180,
      _0x31c6cb = document["createElement"]("li");
    _0x31c6cb[_0x4cb522(_0x57a4e3._0x18842e)]["add"](
      _0x4cb522(_0x57a4e3._0x32583c),
      "" + _0x1513e2,
    );
    let _0x1e455a =
      _0x1513e2 === "outgoing"
        ? _0x4cb522(_0x57a4e3._0x2abd10)
        : _0x4cb522(_0x57a4e3._0x443109);
    return (
      (_0x31c6cb["innerHTML"] = _0x1e455a),
      (_0x31c6cb[_0x4cb522(_0x57a4e3._0x490e56)]("p")[
        _0x4cb522(_0x57a4e3._0x1d0d31)
      ] = _0x358324),
      _0x31c6cb
    );
  },
  generateResponse = async (_0x40a73f) => {
    const _0x477a37 = {
        _0x20612c: 0x1bc,
        _0x213128: 0x1d8,
        _0x2cf8f: 0x1d6,
        _0x5e8eac: 0x1c3,
        _0x34c562: 0x1ea,
        _0x137b46: 0x1d5,
        _0x2b9f8f: 0x1eb,
        _0x8eed4c: 0x1db,
        _0x5e5795: 0x1c1,
        _0x5e1191: 0x1db,
        _0x117b5d: 0x1d1,
        _0x11c89b: 0x1d1,
        _0x15f927: 0x1e3,
        _0x2c22db: 0x1b7,
        _0x1523ce: 0x1cc,
      },
      _0x596413 = _0x5f2180,
      _0x300970 = _0x40a73f[_0x596413(_0x477a37._0x20612c)]("p");
    conversationHistory["push"]({
      role: _0x596413(_0x477a37._0x213128),
      content: userMessage,
    });
    const _0x4b21f4 = {
      method: "POST",
      headers: {
        "Content-Type": _0x596413(_0x477a37._0x2cf8f),
        Authorization: _0x596413(_0x477a37._0x5e8eac) + API_KEY,
      },
      body: JSON[_0x596413(_0x477a37._0x34c562)]({
        model: _0x596413(_0x477a37._0x137b46),
        messages: [assistantInstructions, ...conversationHistory],
      }),
    };
    try {
      const _0x429c9f = await fetch(API_URL, _0x4b21f4),
        _0x255099 = await _0x429c9f[_0x596413(_0x477a37._0x2b9f8f)]();
      if (!_0x429c9f["ok"])
        throw new Error(_0x255099["error"][_0x596413(_0x477a37._0x8eed4c)]);
      const _0x411a4e =
        _0x255099[_0x596413(_0x477a37._0x5e5795)][0x0][
          _0x596413(_0x477a37._0x5e1191)
        ]["content"];
      (_0x300970[_0x596413(_0x477a37._0x117b5d)] = _0x411a4e),
        conversationHistory["push"]({ role: "assistant", content: _0x411a4e });
    } catch (_0x4af377) {
      _0x300970["classList"]["add"]("error"),
        (_0x300970[_0x596413(_0x477a37._0x11c89b)] = _0x596413(
          _0x477a37._0x15f927,
        ));
    } finally {
      chatbox[_0x596413(_0x477a37._0x2c22db)](
        0x0,
        chatbox[_0x596413(_0x477a37._0x1523ce)],
      );
    }
  },
  handleChat = () => {
    const _0x55eef1 = {
        _0x1decc6: 0x1ca,
        _0x5dd36d: 0x1d9,
        _0x231b34: 0x1b9,
        _0xf6442a: 0x1b6,
        _0x397076: 0x1b7,
      },
      _0x5b305d = { _0xeaac5b: 0x1b1, _0x255178: 0x1b6, _0x8fe2aa: 0x1cc },
      _0x21ba41 = _0x5f2180;
    userMessage = chatInput[_0x21ba41(_0x55eef1._0x1decc6)]["trim"]();
    if (!userMessage) return;
    (chatInput["value"] = ""),
      (chatInput[_0x21ba41(_0x55eef1._0x5dd36d)][
        _0x21ba41(_0x55eef1._0x231b34)
      ] = inputInitHeight + "px"),
      chatbox[_0x21ba41(_0x55eef1._0xf6442a)](
        createChatLi(userMessage, "outgoing"),
      ),
      chatbox[_0x21ba41(_0x55eef1._0x397076)](0x0, chatbox["scrollHeight"]),
      setTimeout(() => {
        const _0xd158e0 = _0x21ba41,
          _0x43467e = createChatLi(_0xd158e0(_0x5b305d._0xeaac5b), "incoming");
        chatbox[_0xd158e0(_0x5b305d._0x255178)](_0x43467e),
          chatbox["scrollTo"](0x0, chatbox[_0xd158e0(_0x5b305d._0x8fe2aa)]),
          generateResponse(_0x43467e);
      }, 0x258);
  };
chatInput[_0x5f2180(0x1c8)]("input", () => {
  const _0x26f9eb = { _0x217672: 0x1d9, _0x468440: 0x1b9, _0x1ea92d: 0x1cc },
    _0x345b56 = _0x5f2180;
  (chatInput[_0x345b56(_0x26f9eb._0x217672)]["height"] =
    inputInitHeight + "px"),
    (chatInput["style"][_0x345b56(_0x26f9eb._0x468440)] =
      chatInput[_0x345b56(_0x26f9eb._0x1ea92d)] + "px");
}),
  chatInput["addEventListener"]("keydown", (_0x1f9c26) => {
    const _0x611b96 = {
        _0x5e01e8: 0x1da,
        _0x2e8bfb: 0x1cb,
        _0x592422: 0x1de,
        _0x4f5c72: 0x1dc,
      },
      _0x167ae3 = _0x5f2180;
    _0x1f9c26["key"] === _0x167ae3(_0x611b96._0x5e01e8) &&
      !_0x1f9c26[_0x167ae3(_0x611b96._0x2e8bfb)] &&
      window[_0x167ae3(_0x611b96._0x592422)] > 0x320 &&
      (_0x1f9c26[_0x167ae3(_0x611b96._0x4f5c72)](), handleChat());
  }),
  sendChatBtn[_0x5f2180(0x1c8)]("click", handleChat),
  closeBtn[_0x5f2180(0x1c8)](_0x5f2180(0x1e8), () =>
    document["body"][_0x5f2180(0x1b0)][_0x5f2180(0x1c0)](_0x5f2180(0x1c7)),
  ),
  chatbotToggler[_0x5f2180(0x1c8)](_0x5f2180(0x1e8), () =>
    document[_0x5f2180(0x1d7)]["classList"][_0x5f2180(0x1dd)]("show-chatbot"),
  );
function openChat() {
  const _0x45a52e = { _0x279412: 0x1d7, _0xdcedbc: 0x1b0, _0x5d1e96: 0x1dd },
    _0x45c9b0 = _0x5f2180;
  document[_0x45c9b0(_0x45a52e._0x279412)][_0x45c9b0(_0x45a52e._0xdcedbc)][
    _0x45c9b0(_0x45a52e._0x5d1e96)
  ]("show-chatbot");
}
